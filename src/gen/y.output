Terminals which are not used

   PP_NEWLINE
   PP_ERROR
   PP_WARNING
   PP_PRAGMA
   NAME_MACRO
   NAME_STRUCT
   NAME_UNION
   NAME_ENUM


State 27 conflicts: 1 shift/reduce
State 525 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 preprocessor_content: LITERAL_INT
    2                     | LITERAL_FLOAT
    3                     | LITERAL_CHAR
    4                     | LITERAL_STRING
    5                     | LITERAL_ENUM
    6                     | PP_STRING
    7                     | PP_CONTENT

    8 preprocessor: PP preprocessor_conditional '\n'
    9             | PP preprocessor_undefine '\n'
   10             | PP preprocessor_define '\n'
   11             | PP preprocessor_include '\n'
   12             | PP preprocessor_line '\n'

   13 preprocessor_conditional: PP_IF preprocessor_content
   14                         | PP_ELIF preprocessor_content
   15                         | PP_ELSE
   16                         | PP_ENDIF
   17                         | PP_IFDEF PP_SPACE IDENTIFIER
   18                         | PP_IFNDEF PP_SPACE IDENTIFIER

   19 preprocessor_undefine: PP_UNDEF PP_SPACE IDENTIFIER

   20 preprocessor_define: PP_DEFINE PP_SPACE IDENTIFIER
   21                    | PP_DEFINE PP_SPACE IDENTIFIER PP_SPACE
   22                    | PP_DEFINE PP_SPACE IDENTIFIER PP_SPACE preprocessor_content
   23                    | PP_DEFINE PP_SPACE IDENTIFIER '(' preprocessor_define_args ')'
   24                    | PP_DEFINE PP_SPACE IDENTIFIER '(' preprocessor_define_args ')' preprocessor_content

   25 preprocessor_define_args: IDENTIFIER
   26                         | preprocessor_define_args ',' IDENTIFIER

   27 preprocessor_include: PP_INCLUDE PP_STRING
   28                     | PP_INCLUDE LITERAL_STRING
   29                     | PP_INCLUDE PP_SPACE PP_STRING
   30                     | PP_INCLUDE PP_SPACE LITERAL_STRING

   31 preprocessor_line: PP_LINE
   32                  | PP_LINE PP_SPACE
   33                  | PP_LINE PP_SPACE constant
   34                  | PP_LINE PP_SPACE constant PP_SPACE PP_STRING
   35                  | PP_LINE PP_SPACE constant PP_SPACE LITERAL_STRING

   36 constant: LITERAL_INT
   37         | LITERAL_CHAR
   38         | LITERAL_FLOAT
   39         | LITERAL_ENUM

   40 string: LITERAL_STRING

   41 expression_primary: IDENTIFIER
   42                   | constant
   43                   | string
   44                   | '(' expression ')'
   45                   | generic_selection

   46 expression_postfix: expression_primary
   47                   | expression_postfix '[' expression ']'
   48                   | expression_postfix '(' ')'
   49                   | expression_postfix '(' argument_expression_list ')'
   50                   | expression_postfix '.' IDENTIFIER
   51                   | expression_postfix OP_PTR IDENTIFIER
   52                   | expression_postfix OP_INC
   53                   | expression_postfix OP_DEC
   54                   | '(' type_name ')' '{' initializer_list '}'
   55                   | '(' type_name ')' '{' initializer_list ',' '}'

   56 argument_expression_list: expression_assignment
   57                         | argument_expression_list ',' expression_assignment

   58 expression_unary: expression_postfix
   59                 | OP_INC expression_unary
   60                 | OP_DEC expression_unary
   61                 | unary_operator expression_cast
   62                 | SIZEOF expression_unary
   63                 | SIZEOF '(' type_name ')'
   64                 | ALIGNOF '(' type_name ')'

   65 unary_operator: '&'
   66               | '*'
   67               | '+'
   68               | '-'
   69               | '~'
   70               | '!'

   71 expression_cast: expression_unary
   72                | '(' type_name ')' expression_cast

   73 expression_multiplicative: expression_cast
   74                          | expression_multiplicative '*' expression_cast
   75                          | expression_multiplicative '/' expression_cast
   76                          | expression_multiplicative '%' expression_cast

   77 expression_additive: expression_multiplicative
   78                    | expression_additive '+' expression_multiplicative
   79                    | expression_additive '-' expression_multiplicative

   80 expression_shift: expression_additive
   81                 | expression_shift OP_BITLEFT expression_additive
   82                 | expression_shift OP_BITRIGHT expression_additive

   83 expression_relational: expression_shift
   84                      | expression_relational OP_LT expression_shift
   85                      | expression_relational OP_GT expression_shift
   86                      | expression_relational OP_LTE expression_shift
   87                      | expression_relational OP_GTE expression_shift

   88 expression_equality: expression_relational
   89                    | expression_equality OP_EQ expression_relational
   90                    | expression_equality OP_NEQ expression_relational

   91 expression_bitwise_and: expression_equality
   92                       | expression_bitwise_and '&' expression_equality

   93 expression_bitwise_xor: expression_bitwise_and
   94                       | expression_bitwise_xor '^' expression_bitwise_and

   95 expression_bitwise_or: expression_bitwise_xor
   96                      | expression_bitwise_or '|' expression_bitwise_xor

   97 expression_logical_and: expression_bitwise_or
   98                       | expression_logical_and OP_AND expression_bitwise_or

   99 expression_logical_or: expression_logical_and
  100                      | expression_logical_or OP_OR expression_logical_and

  101 expression_ternary: expression_logical_or
  102                   | expression_logical_or '?' expression ':' expression_ternary

  103 expression_assignment: expression_ternary
  104                      | expression_unary assignment_operator expression_assignment

  105 assignment_operator: '='
  106                    | OP_ASSIGN_MUL
  107                    | OP_ASSIGN_DIV
  108                    | OP_ASSIGN_MOD
  109                    | OP_ASSIGN_ADD
  110                    | OP_ASSIGN_SUB
  111                    | OP_ASSIGN_BITLEFT
  112                    | OP_ASSIGN_BITRIGHT
  113                    | OP_ASSIGN_BITAND
  114                    | OP_ASSIGN_BITXOR
  115                    | OP_ASSIGN_BITOR

  116 expression: expression_assignment
  117           | expression ',' expression_assignment

  118 expression_constant: expression_ternary

  119 storage_class_specifier: EXTERN
  120                        | STATIC
  121                        | THREAD_LOCAL
  122                        | AUTO
  123                        | REGISTER

  124 type_specifier: VOID
  125               | CHAR
  126               | SHORT
  127               | INT
  128               | LONG
  129               | FLOAT
  130               | DOUBLE
  131               | SIGNED
  132               | UNSIGNED
  133               | BOOL
  134               | COMPLEX
  135               | IMAGINARY
  136               | atomic_type_specifier
  137               | struct_specifier
  138               | union_specifier
  139               | enum_specifier
  140               | NAME_TYPEDEF

  141 specifier_qualifier_list: type_specifier specifier_qualifier_list
  142                         | type_specifier
  143                         | type_qualifier specifier_qualifier_list
  144                         | type_qualifier

  145 struct_specifier: STRUCT '{' struct_declaration_list '}'
  146                 | STRUCT IDENTIFIER '{' struct_declaration_list '}'
  147                 | STRUCT IDENTIFIER

  148 struct_declaration_list: struct_declaration
  149                        | struct_declaration_list struct_declaration

  150 struct_declaration: specifier_qualifier_list ';'
  151                   | specifier_qualifier_list struct_declarator_list ';'
  152                   | static_assert_declaration

  153 struct_declarator_list: struct_declarator
  154                       | struct_declarator_list ',' struct_declarator

  155 struct_declarator: ':' expression_constant
  156                  | declarator ':' expression_constant
  157                  | declarator

  158 union_specifier: UNION '{' struct_declaration_list '}'
  159                | UNION IDENTIFIER '{' struct_declaration_list '}'
  160                | UNION IDENTIFIER

  161 enum_specifier: ENUM '{' enumerator_list '}'
  162               | ENUM '{' enumerator_list ',' '}'
  163               | ENUM IDENTIFIER '{' enumerator_list '}'
  164               | ENUM IDENTIFIER '{' enumerator_list ',' '}'
  165               | ENUM IDENTIFIER

  166 enumerator_list: enumerator
  167                | enumerator_list ',' enumerator

  168 enumerator: IDENTIFIER '=' expression_constant
  169           | IDENTIFIER

  170 generic_selection: GENERIC '(' expression_assignment ',' generic_assoc_list ')'

  171 generic_assoc_list: generic_association
  172                   | generic_assoc_list ',' generic_association

  173 generic_association: type_name ':' expression_assignment
  174                    | DEFAULT ':' expression_assignment

  175 atomic_type_specifier: ATOMIC '(' type_name ')'

  176 function_specifier: INLINE
  177                   | NORETURN

  178 alignment_specifier: ALIGNAS '(' type_name ')'
  179                    | ALIGNAS '(' expression_constant ')'

  180 parameter_type_list: parameter_list ',' ELLIPSIS
  181                    | parameter_list

  182 parameter_list: parameter_declaration
  183               | parameter_list ',' parameter_declaration

  184 parameter_declaration: declaration_specifiers declarator
  185                      | declaration_specifiers abstract_declarator
  186                      | declaration_specifiers

  187 identifier_list: IDENTIFIER
  188                | identifier_list ',' IDENTIFIER

  189 type_name: specifier_qualifier_list abstract_declarator
  190          | specifier_qualifier_list

  191 initializer_list: designation initializer
  192                 | initializer
  193                 | initializer_list ',' designation initializer
  194                 | initializer_list ',' initializer

  195 initializer: '{' initializer_list '}'
  196            | '{' initializer_list ',' '}'
  197            | expression_assignment

  198 designation: designator_list '='

  199 designator_list: designator
  200                | designator_list designator

  201 designator: '[' expression_constant ']'
  202           | '.' IDENTIFIER

  203 static_assert_declaration: STATIC_ASSERT '(' expression_constant ',' LITERAL_STRING ')' ';'

  204 labeled_statement: IDENTIFIER ':' statement
  205                  | CASE expression_constant ':' statement
  206                  | DEFAULT ':' statement

  207 statement_expression: ';'
  208                     | expression ';'

  209 statement_condition: IF '(' expression ')' statement ELSE statement
  210                    | IF '(' expression ')' statement
  211                    | SWITCH '(' expression ')' statement

  212 statement_iteration: WHILE '(' expression ')' statement
  213                    | DO statement WHILE '(' expression ')' ';'
  214                    | FOR '(' statement_expression statement_expression ')' statement
  215                    | FOR '(' statement_expression statement_expression expression ')' statement
  216                    | FOR '(' declaration statement_expression ')' statement
  217                    | FOR '(' declaration statement_expression expression ')' statement

  218 statement_jump: GOTO IDENTIFIER ';'
  219               | CONTINUE ';'
  220               | BREAK ';'
  221               | RETURN ';'
  222               | RETURN expression ';'

  223 statement: labeled_statement
  224          | compound_statement
  225          | statement_expression
  226          | statement_condition
  227          | statement_iteration
  228          | statement_jump

  229 block_item_list: block_item
  230                | block_item_list block_item

  231 block_item: declaration
  232           | statement

  233 compound_statement: '{' '}'
  234                   | '{' block_item_list '}'

  235 type_qualifier: CONST
  236               | RESTRICT
  237               | VOLATILE
  238               | ATOMIC

  239 type_qualifier_list: type_qualifier
  240                    | type_qualifier_list type_qualifier

  241 pointer: '*' type_qualifier_list pointer
  242        | '*' type_qualifier_list
  243        | '*' pointer
  244        | '*'

  245 direct_abstract_declarator: '(' abstract_declarator ')'
  246                           | '[' ']'
  247                           | '[' '*' ']'
  248                           | '[' STATIC type_qualifier_list expression_assignment ']'
  249                           | '[' STATIC expression_assignment ']'
  250                           | '[' type_qualifier_list STATIC expression_assignment ']'
  251                           | '[' type_qualifier_list expression_assignment ']'
  252                           | '[' type_qualifier_list ']'
  253                           | '[' expression_assignment ']'
  254                           | direct_abstract_declarator '[' ']'
  255                           | direct_abstract_declarator '[' '*' ']'
  256                           | direct_abstract_declarator '[' STATIC type_qualifier_list expression_assignment ']'
  257                           | direct_abstract_declarator '[' STATIC expression_assignment ']'
  258                           | direct_abstract_declarator '[' type_qualifier_list expression_assignment ']'
  259                           | direct_abstract_declarator '[' type_qualifier_list STATIC expression_assignment ']'
  260                           | direct_abstract_declarator '[' type_qualifier_list ']'
  261                           | direct_abstract_declarator '[' expression_assignment ']'
  262                           | '(' ')'
  263                           | '(' parameter_type_list ')'
  264                           | direct_abstract_declarator '(' ')'
  265                           | direct_abstract_declarator '(' parameter_type_list ')'

  266 abstract_declarator: pointer direct_abstract_declarator
  267                    | pointer
  268                    | direct_abstract_declarator

  269 direct_declarator: IDENTIFIER
  270                  | '(' declarator ')'
  271                  | direct_declarator '[' ']'
  272                  | direct_declarator '[' '*' ']'
  273                  | direct_declarator '[' STATIC type_qualifier_list expression_assignment ']'
  274                  | direct_declarator '[' STATIC expression_assignment ']'
  275                  | direct_declarator '[' type_qualifier_list '*' ']'
  276                  | direct_declarator '[' type_qualifier_list STATIC expression_assignment ']'
  277                  | direct_declarator '[' type_qualifier_list expression_assignment ']'
  278                  | direct_declarator '[' type_qualifier_list ']'
  279                  | direct_declarator '[' expression_assignment ']'
  280                  | direct_declarator '(' parameter_type_list ')'
  281                  | direct_declarator '(' ')'
  282                  | direct_declarator '(' identifier_list ')'

  283 declarator_list: declarator
  284                | declarator_list ',' declarator

  285 declarator: pointer direct_declarator
  286           | direct_declarator

  287 declarator_initializer_list: declarator_initializer
  288                            | declarator_initializer_list ',' declarator_initializer

  289 declarator_initializer: declarator '=' initializer
  290                       | declarator

  291 declaration_specifiers: storage_class_specifier declaration_specifiers
  292                       | storage_class_specifier
  293                       | type_specifier declaration_specifiers
  294                       | type_specifier
  295                       | type_qualifier declaration_specifiers
  296                       | type_qualifier
  297                       | function_specifier declaration_specifiers
  298                       | function_specifier
  299                       | alignment_specifier declaration_specifiers
  300                       | alignment_specifier

  301 declaration: TYPEDEF declaration_specifiers declarator_list ';'
  302            | declaration_specifiers ';'
  303            | declaration_specifiers declarator_initializer_list ';'
  304            | static_assert_declaration

  305 declaration_list: declaration
  306                 | declaration_list declaration

  307 function_definition: declaration_specifiers declarator declaration_list compound_statement
  308                    | declaration_specifiers declarator compound_statement

  309 external_declaration: function_definition
  310                     | declaration
  311                     | preprocessor

  312 translation_unit: external_declaration
  313                 | translation_unit external_declaration


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 8 9 10 11 12
'!' (33) 70
'%' (37) 76
'&' (38) 65 92
'(' (40) 23 24 44 48 49 54 55 63 64 72 170 175 178 179 203 209 210
    211 212 213 214 215 216 217 245 262 263 264 265 270 280 281 282
')' (41) 23 24 44 48 49 54 55 63 64 72 170 175 178 179 203 209 210
    211 212 213 214 215 216 217 245 262 263 264 265 270 280 281 282
'*' (42) 66 74 241 242 243 244 247 255 272 275
'+' (43) 67 78
',' (44) 26 55 57 117 154 162 164 167 170 172 180 183 188 193 194 196
    203 284 288
'-' (45) 68 79
'.' (46) 50 202
'/' (47) 75
':' (58) 102 155 156 173 174 204 205 206
';' (59) 150 151 203 207 208 213 218 219 220 221 222 301 302 303
'=' (61) 105 168 198 289
'?' (63) 102
'[' (91) 47 201 246 247 248 249 250 251 252 253 254 255 256 257 258
    259 260 261 271 272 273 274 275 276 277 278 279
']' (93) 47 201 246 247 248 249 250 251 252 253 254 255 256 257 258
    259 260 261 271 272 273 274 275 276 277 278 279
'^' (94) 94
'{' (123) 54 55 145 146 158 159 161 162 163 164 195 196 233 234
'|' (124) 96
'}' (125) 54 55 145 146 158 159 161 162 163 164 195 196 233 234
'~' (126) 69
error (256)
PP (258) 8 9 10 11 12
PP_SPACE (259) 17 18 19 20 21 22 23 24 29 30 32 33 34 35
PP_NEWLINE (260)
PP_CONTENT (261) 7
PP_STRING (262) 6 27 29 34
PP_IF (263) 13
PP_ELIF (264) 14
PP_ELSE (265) 15
PP_ENDIF (266) 16
PP_IFDEF (267) 17
PP_IFNDEF (268) 18
PP_UNDEF (269) 19
PP_DEFINE (270) 20 21 22 23 24
PP_ERROR (271)
PP_WARNING (272)
PP_INCLUDE (273) 27 28 29 30
PP_PRAGMA (274)
PP_LINE (275) 31 32 33 34 35
IDENTIFIER (276) 17 18 19 20 21 22 23 24 25 26 41 50 51 146 147 159
    160 163 164 165 168 169 187 188 202 204 218 269
LITERAL_INT (277) 1 36
LITERAL_FLOAT (278) 2 38
LITERAL_CHAR (279) 3 37
LITERAL_STRING (280) 4 28 30 35 40 203
LITERAL_ENUM (281) 5 39
NAME_MACRO (282)
NAME_TYPEDEF (283) 140
NAME_STRUCT (284)
NAME_UNION (285)
NAME_ENUM (286)
IF (287) 209 210
ELSE (288) 209
WHILE (289) 212 213
DO (290) 213
FOR (291) 214 215 216 217
RETURN (292) 221 222
GOTO (293) 218
CONTINUE (294) 219
BREAK (295) 220
SWITCH (296) 211
CASE (297) 205
DEFAULT (298) 174 206
SIZEOF (299) 62 63
ALIGNOF (300) 64
OP_PTR (301) 51
OP_INC (302) 52 59
OP_DEC (303) 53 60
OP_BITLEFT (304) 81
OP_BITRIGHT (305) 82
OP_AND (306) 98
OP_OR (307) 100
OP_LT (308) 84
OP_GT (309) 85
OP_LTE (310) 86
OP_GTE (311) 87
OP_EQ (312) 89
OP_NEQ (313) 90
OP_ASSIGN_MUL (314) 106
OP_ASSIGN_DIV (315) 107
OP_ASSIGN_MOD (316) 108
OP_ASSIGN_ADD (317) 109
OP_ASSIGN_SUB (318) 110
OP_ASSIGN_BITLEFT (319) 111
OP_ASSIGN_BITRIGHT (320) 112
OP_ASSIGN_BITAND (321) 113
OP_ASSIGN_BITXOR (322) 114
OP_ASSIGN_BITOR (323) 115
TYPEDEF (324) 301
EXTERN (325) 119
STATIC (326) 120 248 249 250 256 257 259 273 274 276
AUTO (327) 122
REGISTER (328) 123
INLINE (329) 176
CONST (330) 235
RESTRICT (331) 236
VOLATILE (332) 237
SIGNED (333) 131
UNSIGNED (334) 132
VOID (335) 124
BOOL (336) 133
CHAR (337) 125
SHORT (338) 126
INT (339) 127
LONG (340) 128
FLOAT (341) 129
DOUBLE (342) 130
COMPLEX (343) 134
IMAGINARY (344) 135
STRUCT (345) 145 146 147
UNION (346) 158 159 160
ENUM (347) 161 162 163 164 165
ELLIPSIS (348) 180
ATOMIC (349) 175 238
ALIGNAS (350) 178 179
NORETURN (351) 177
THREAD_LOCAL (352) 121
GENERIC (353) 170
STATIC_ASSERT (354) 203


Nonterminals, with rules where they appear

$accept (123)
    on left: 0
preprocessor_content (124)
    on left: 1 2 3 4 5 6 7, on right: 13 14 22 24
preprocessor_define (125)
    on left: 20 21 22 23 24, on right: 10
preprocessor_define_args (126)
    on left: 25 26, on right: 23 24 26
preprocessor (127)
    on left: 8 9 10 11 12, on right: 311
preprocessor_conditional (128)
    on left: 13 14 15 16 17 18, on right: 8
preprocessor_undefine (129)
    on left: 19, on right: 9
preprocessor_include (130)
    on left: 27 28 29 30, on right: 11
preprocessor_line (131)
    on left: 31 32 33 34 35, on right: 12
constant (132)
    on left: 36 37 38 39, on right: 33 34 35 42
string (133)
    on left: 40, on right: 43
expression_primary (134)
    on left: 41 42 43 44 45, on right: 46
expression_postfix (135)
    on left: 46 47 48 49 50 51 52 53 54 55, on right: 47 48 49 50 51
    52 53 58
argument_expression_list (136)
    on left: 56 57, on right: 49 57
expression_unary (137)
    on left: 58 59 60 61 62 63 64, on right: 59 60 62 71 104
unary_operator (138)
    on left: 65 66 67 68 69 70, on right: 61
expression_cast (139)
    on left: 71 72, on right: 61 72 73 74 75 76
expression_multiplicative (140)
    on left: 73 74 75 76, on right: 74 75 76 77 78 79
expression_additive (141)
    on left: 77 78 79, on right: 78 79 80 81 82
expression_shift (142)
    on left: 80 81 82, on right: 81 82 83 84 85 86 87
expression_relational (143)
    on left: 83 84 85 86 87, on right: 84 85 86 87 88 89 90
expression_equality (144)
    on left: 88 89 90, on right: 89 90 91 92
expression_bitwise_and (145)
    on left: 91 92, on right: 92 93 94
expression_bitwise_xor (146)
    on left: 93 94, on right: 94 95 96
expression_bitwise_or (147)
    on left: 95 96, on right: 96 97 98
expression_logical_and (148)
    on left: 97 98, on right: 98 99 100
expression_logical_or (149)
    on left: 99 100, on right: 100 101 102
expression_ternary (150)
    on left: 101 102, on right: 102 103 118
expression_assignment (151)
    on left: 103 104, on right: 56 57 104 116 117 170 173 174 197 248
    249 250 251 253 256 257 258 259 261 273 274 276 277 279
assignment_operator (152)
    on left: 105 106 107 108 109 110 111 112 113 114 115,
    on right: 104
expression (153)
    on left: 116 117, on right: 44 47 102 117 208 209 210 211 212 213
    215 217 222
expression_constant (154)
    on left: 118, on right: 155 156 168 179 201 203 205
storage_class_specifier (155)
    on left: 119 120 121 122 123, on right: 291 292
type_specifier (156)
    on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137
    138 139 140, on right: 141 142 293 294
specifier_qualifier_list (157)
    on left: 141 142 143 144, on right: 141 143 150 151 189 190
struct_specifier (158)
    on left: 145 146 147, on right: 137
struct_declaration_list (159)
    on left: 148 149, on right: 145 146 149 158 159
struct_declaration (160)
    on left: 150 151 152, on right: 148 149
struct_declarator_list (161)
    on left: 153 154, on right: 151 154
struct_declarator (162)
    on left: 155 156 157, on right: 153 154
union_specifier (163)
    on left: 158 159 160, on right: 138
enum_specifier (164)
    on left: 161 162 163 164 165, on right: 139
enumerator_list (165)
    on left: 166 167, on right: 161 162 163 164 167
enumerator (166)
    on left: 168 169, on right: 166 167
generic_selection (167)
    on left: 170, on right: 45
generic_assoc_list (168)
    on left: 171 172, on right: 170 172
generic_association (169)
    on left: 173 174, on right: 171 172
atomic_type_specifier (170)
    on left: 175, on right: 136
function_specifier (171)
    on left: 176 177, on right: 297 298
alignment_specifier (172)
    on left: 178 179, on right: 299 300
parameter_type_list (173)
    on left: 180 181, on right: 263 265 280
parameter_list (174)
    on left: 182 183, on right: 180 181 183
parameter_declaration (175)
    on left: 184 185 186, on right: 182 183
identifier_list (176)
    on left: 187 188, on right: 188 282
type_name (177)
    on left: 189 190, on right: 54 55 63 64 72 173 175 178
initializer_list (178)
    on left: 191 192 193 194, on right: 54 55 193 194 195 196
initializer (179)
    on left: 195 196 197, on right: 191 192 193 194 289
designation (180)
    on left: 198, on right: 191 193
designator_list (181)
    on left: 199 200, on right: 198 200
designator (182)
    on left: 201 202, on right: 199 200
static_assert_declaration (183)
    on left: 203, on right: 152 304
labeled_statement (184)
    on left: 204 205 206, on right: 223
statement_expression (185)
    on left: 207 208, on right: 214 215 216 217 225
statement_condition (186)
    on left: 209 210 211, on right: 226
statement_iteration (187)
    on left: 212 213 214 215 216 217, on right: 227
statement_jump (188)
    on left: 218 219 220 221 222, on right: 228
statement (189)
    on left: 223 224 225 226 227 228, on right: 204 205 206 209 210
    211 212 213 214 215 216 217 232
block_item_list (190)
    on left: 229 230, on right: 230 234
block_item (191)
    on left: 231 232, on right: 229 230
compound_statement (192)
    on left: 233 234, on right: 224 307 308
type_qualifier (193)
    on left: 235 236 237 238, on right: 143 144 239 240 295 296
type_qualifier_list (194)
    on left: 239 240, on right: 240 241 242 248 250 251 252 256 258
    259 260 273 275 276 277 278
pointer (195)
    on left: 241 242 243 244, on right: 241 243 266 267 285
direct_abstract_declarator (196)
    on left: 245 246 247 248 249 250 251 252 253 254 255 256 257 258
    259 260 261 262 263 264 265, on right: 254 255 256 257 258 259
    260 261 264 265 266 268
abstract_declarator (197)
    on left: 266 267 268, on right: 185 189 245
direct_declarator (198)
    on left: 269 270 271 272 273 274 275 276 277 278 279 280 281 282
   , on right: 271 272 273 274 275 276 277 278 279 280 281 282 285
    286
declarator_list (199)
    on left: 283 284, on right: 284 301
declarator (200)
    on left: 285 286, on right: 156 157 184 270 283 284 289 290 307
    308
declarator_initializer_list (201)
    on left: 287 288, on right: 288 303
declarator_initializer (202)
    on left: 289 290, on right: 287 288
declaration_specifiers (203)
    on left: 291 292 293 294 295 296 297 298 299 300,
    on right: 184 185 186 291 293 295 297 299 301 302 303 307 308
declaration (204)
    on left: 301 302 303 304, on right: 216 217 231 305 306 310
declaration_list (205)
    on left: 305 306, on right: 306 307
function_definition (206)
    on left: 307 308, on right: 309
external_declaration (207)
    on left: 309 310 311, on right: 312 313
translation_unit (208)
    on left: 312 313, on right: 0 313


state 0

    0 $accept: . translation_unit $end

    PP             shift, and go to state 1
    NAME_TYPEDEF   shift, and go to state 2
    TYPEDEF        shift, and go to state 3
    EXTERN         shift, and go to state 4
    STATIC         shift, and go to state 5
    AUTO           shift, and go to state 6
    REGISTER       shift, and go to state 7
    INLINE         shift, and go to state 8
    CONST          shift, and go to state 9
    RESTRICT       shift, and go to state 10
    VOLATILE       shift, and go to state 11
    SIGNED         shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    VOID           shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    SHORT          shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    FLOAT          shift, and go to state 20
    DOUBLE         shift, and go to state 21
    COMPLEX        shift, and go to state 22
    IMAGINARY      shift, and go to state 23
    STRUCT         shift, and go to state 24
    UNION          shift, and go to state 25
    ENUM           shift, and go to state 26
    ATOMIC         shift, and go to state 27
    ALIGNAS        shift, and go to state 28
    NORETURN       shift, and go to state 29
    THREAD_LOCAL   shift, and go to state 30
    STATIC_ASSERT  shift, and go to state 31

    preprocessor               go to state 32
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_specifier           go to state 35
    union_specifier            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    function_specifier         go to state 39
    alignment_specifier        go to state 40
    static_assert_declaration  go to state 41
    type_qualifier             go to state 42
    declaration_specifiers     go to state 43
    declaration                go to state 44
    function_definition        go to state 45
    external_declaration       go to state 46
    translation_unit           go to state 47


state 1

    8 preprocessor: PP . preprocessor_conditional '\n'
    9             | PP . preprocessor_undefine '\n'
   10             | PP . preprocessor_define '\n'
   11             | PP . preprocessor_include '\n'
   12             | PP . preprocessor_line '\n'

    PP_IF       shift, and go to state 48
    PP_ELIF     shift, and go to state 49
    PP_ELSE     shift, and go to state 50
    PP_ENDIF    shift, and go to state 51
    PP_IFDEF    shift, and go to state 52
    PP_IFNDEF   shift, and go to state 53
    PP_UNDEF    shift, and go to state 54
    PP_DEFINE   shift, and go to state 55
    PP_INCLUDE  shift, and go to state 56
    PP_LINE     shift, and go to state 57

    preprocessor_define       go to state 58
    preprocessor_conditional  go to state 59
    preprocessor_undefine     go to state 60
    preprocessor_include      go to state 61
    preprocessor_line         go to state 62


state 2

  140 type_specifier: NAME_TYPEDEF .

    $default  reduce using rule 140 (type_specifier)


state 3

  301 declaration: TYPEDEF . declaration_specifiers declarator_list ';'

    NAME_TYPEDEF  shift, and go to state 2
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    INLINE        shift, and go to state 8
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27
    ALIGNAS       shift, and go to state 28
    NORETURN      shift, and go to state 29
    THREAD_LOCAL  shift, and go to state 30

    storage_class_specifier  go to state 33
    type_specifier           go to state 34
    struct_specifier         go to state 35
    union_specifier          go to state 36
    enum_specifier           go to state 37
    atomic_type_specifier    go to state 38
    function_specifier       go to state 39
    alignment_specifier      go to state 40
    type_qualifier           go to state 42
    declaration_specifiers   go to state 63


state 4

  119 storage_class_specifier: EXTERN .

    $default  reduce using rule 119 (storage_class_specifier)


state 5

  120 storage_class_specifier: STATIC .

    $default  reduce using rule 120 (storage_class_specifier)


state 6

  122 storage_class_specifier: AUTO .

    $default  reduce using rule 122 (storage_class_specifier)


state 7

  123 storage_class_specifier: REGISTER .

    $default  reduce using rule 123 (storage_class_specifier)


state 8

  176 function_specifier: INLINE .

    $default  reduce using rule 176 (function_specifier)


state 9

  235 type_qualifier: CONST .

    $default  reduce using rule 235 (type_qualifier)


state 10

  236 type_qualifier: RESTRICT .

    $default  reduce using rule 236 (type_qualifier)


state 11

  237 type_qualifier: VOLATILE .

    $default  reduce using rule 237 (type_qualifier)


state 12

  131 type_specifier: SIGNED .

    $default  reduce using rule 131 (type_specifier)


state 13

  132 type_specifier: UNSIGNED .

    $default  reduce using rule 132 (type_specifier)


state 14

  124 type_specifier: VOID .

    $default  reduce using rule 124 (type_specifier)


state 15

  133 type_specifier: BOOL .

    $default  reduce using rule 133 (type_specifier)


state 16

  125 type_specifier: CHAR .

    $default  reduce using rule 125 (type_specifier)


state 17

  126 type_specifier: SHORT .

    $default  reduce using rule 126 (type_specifier)


state 18

  127 type_specifier: INT .

    $default  reduce using rule 127 (type_specifier)


state 19

  128 type_specifier: LONG .

    $default  reduce using rule 128 (type_specifier)


state 20

  129 type_specifier: FLOAT .

    $default  reduce using rule 129 (type_specifier)


state 21

  130 type_specifier: DOUBLE .

    $default  reduce using rule 130 (type_specifier)


state 22

  134 type_specifier: COMPLEX .

    $default  reduce using rule 134 (type_specifier)


state 23

  135 type_specifier: IMAGINARY .

    $default  reduce using rule 135 (type_specifier)


state 24

  145 struct_specifier: STRUCT . '{' struct_declaration_list '}'
  146                 | STRUCT . IDENTIFIER '{' struct_declaration_list '}'
  147                 | STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 64
    '{'         shift, and go to state 65


state 25

  158 union_specifier: UNION . '{' struct_declaration_list '}'
  159                | UNION . IDENTIFIER '{' struct_declaration_list '}'
  160                | UNION . IDENTIFIER

    IDENTIFIER  shift, and go to state 66
    '{'         shift, and go to state 67


state 26

  161 enum_specifier: ENUM . '{' enumerator_list '}'
  162               | ENUM . '{' enumerator_list ',' '}'
  163               | ENUM . IDENTIFIER '{' enumerator_list '}'
  164               | ENUM . IDENTIFIER '{' enumerator_list ',' '}'
  165               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 68
    '{'         shift, and go to state 69


state 27

  175 atomic_type_specifier: ATOMIC . '(' type_name ')'
  238 type_qualifier: ATOMIC .

    '('  shift, and go to state 70

    '('       [reduce using rule 238 (type_qualifier)]
    $default  reduce using rule 238 (type_qualifier)


state 28

  178 alignment_specifier: ALIGNAS . '(' type_name ')'
  179                    | ALIGNAS . '(' expression_constant ')'

    '('  shift, and go to state 71


state 29

  177 function_specifier: NORETURN .

    $default  reduce using rule 177 (function_specifier)


state 30

  121 storage_class_specifier: THREAD_LOCAL .

    $default  reduce using rule 121 (storage_class_specifier)


state 31

  203 static_assert_declaration: STATIC_ASSERT . '(' expression_constant ',' LITERAL_STRING ')' ';'

    '('  shift, and go to state 72


state 32

  311 external_declaration: preprocessor .

    $default  reduce using rule 311 (external_declaration)


state 33

  291 declaration_specifiers: storage_class_specifier . declaration_specifiers
  292                       | storage_class_specifier .

    NAME_TYPEDEF  shift, and go to state 2
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    INLINE        shift, and go to state 8
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27
    ALIGNAS       shift, and go to state 28
    NORETURN      shift, and go to state 29
    THREAD_LOCAL  shift, and go to state 30

    $default  reduce using rule 292 (declaration_specifiers)

    storage_class_specifier  go to state 33
    type_specifier           go to state 34
    struct_specifier         go to state 35
    union_specifier          go to state 36
    enum_specifier           go to state 37
    atomic_type_specifier    go to state 38
    function_specifier       go to state 39
    alignment_specifier      go to state 40
    type_qualifier           go to state 42
    declaration_specifiers   go to state 73


state 34

  293 declaration_specifiers: type_specifier . declaration_specifiers
  294                       | type_specifier .

    NAME_TYPEDEF  shift, and go to state 2
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    INLINE        shift, and go to state 8
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27
    ALIGNAS       shift, and go to state 28
    NORETURN      shift, and go to state 29
    THREAD_LOCAL  shift, and go to state 30

    $default  reduce using rule 294 (declaration_specifiers)

    storage_class_specifier  go to state 33
    type_specifier           go to state 34
    struct_specifier         go to state 35
    union_specifier          go to state 36
    enum_specifier           go to state 37
    atomic_type_specifier    go to state 38
    function_specifier       go to state 39
    alignment_specifier      go to state 40
    type_qualifier           go to state 42
    declaration_specifiers   go to state 74


state 35

  137 type_specifier: struct_specifier .

    $default  reduce using rule 137 (type_specifier)


state 36

  138 type_specifier: union_specifier .

    $default  reduce using rule 138 (type_specifier)


state 37

  139 type_specifier: enum_specifier .

    $default  reduce using rule 139 (type_specifier)


state 38

  136 type_specifier: atomic_type_specifier .

    $default  reduce using rule 136 (type_specifier)


state 39

  297 declaration_specifiers: function_specifier . declaration_specifiers
  298                       | function_specifier .

    NAME_TYPEDEF  shift, and go to state 2
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    INLINE        shift, and go to state 8
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27
    ALIGNAS       shift, and go to state 28
    NORETURN      shift, and go to state 29
    THREAD_LOCAL  shift, and go to state 30

    $default  reduce using rule 298 (declaration_specifiers)

    storage_class_specifier  go to state 33
    type_specifier           go to state 34
    struct_specifier         go to state 35
    union_specifier          go to state 36
    enum_specifier           go to state 37
    atomic_type_specifier    go to state 38
    function_specifier       go to state 39
    alignment_specifier      go to state 40
    type_qualifier           go to state 42
    declaration_specifiers   go to state 75


state 40

  299 declaration_specifiers: alignment_specifier . declaration_specifiers
  300                       | alignment_specifier .

    NAME_TYPEDEF  shift, and go to state 2
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    INLINE        shift, and go to state 8
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27
    ALIGNAS       shift, and go to state 28
    NORETURN      shift, and go to state 29
    THREAD_LOCAL  shift, and go to state 30

    $default  reduce using rule 300 (declaration_specifiers)

    storage_class_specifier  go to state 33
    type_specifier           go to state 34
    struct_specifier         go to state 35
    union_specifier          go to state 36
    enum_specifier           go to state 37
    atomic_type_specifier    go to state 38
    function_specifier       go to state 39
    alignment_specifier      go to state 40
    type_qualifier           go to state 42
    declaration_specifiers   go to state 76


state 41

  304 declaration: static_assert_declaration .

    $default  reduce using rule 304 (declaration)


state 42

  295 declaration_specifiers: type_qualifier . declaration_specifiers
  296                       | type_qualifier .

    NAME_TYPEDEF  shift, and go to state 2
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    INLINE        shift, and go to state 8
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27
    ALIGNAS       shift, and go to state 28
    NORETURN      shift, and go to state 29
    THREAD_LOCAL  shift, and go to state 30

    $default  reduce using rule 296 (declaration_specifiers)

    storage_class_specifier  go to state 33
    type_specifier           go to state 34
    struct_specifier         go to state 35
    union_specifier          go to state 36
    enum_specifier           go to state 37
    atomic_type_specifier    go to state 38
    function_specifier       go to state 39
    alignment_specifier      go to state 40
    type_qualifier           go to state 42
    declaration_specifiers   go to state 77


state 43

  302 declaration: declaration_specifiers . ';'
  303            | declaration_specifiers . declarator_initializer_list ';'
  307 function_definition: declaration_specifiers . declarator declaration_list compound_statement
  308                    | declaration_specifiers . declarator compound_statement

    IDENTIFIER  shift, and go to state 78
    '('         shift, and go to state 79
    '*'         shift, and go to state 80
    ';'         shift, and go to state 81

    pointer                      go to state 82
    direct_declarator            go to state 83
    declarator                   go to state 84
    declarator_initializer_list  go to state 85
    declarator_initializer       go to state 86


state 44

  310 external_declaration: declaration .

    $default  reduce using rule 310 (external_declaration)


state 45

  309 external_declaration: function_definition .

    $default  reduce using rule 309 (external_declaration)


state 46

  312 translation_unit: external_declaration .

    $default  reduce using rule 312 (translation_unit)


state 47

    0 $accept: translation_unit . $end
  313 translation_unit: translation_unit . external_declaration

    $end           shift, and go to state 87
    PP             shift, and go to state 1
    NAME_TYPEDEF   shift, and go to state 2
    TYPEDEF        shift, and go to state 3
    EXTERN         shift, and go to state 4
    STATIC         shift, and go to state 5
    AUTO           shift, and go to state 6
    REGISTER       shift, and go to state 7
    INLINE         shift, and go to state 8
    CONST          shift, and go to state 9
    RESTRICT       shift, and go to state 10
    VOLATILE       shift, and go to state 11
    SIGNED         shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    VOID           shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    SHORT          shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    FLOAT          shift, and go to state 20
    DOUBLE         shift, and go to state 21
    COMPLEX        shift, and go to state 22
    IMAGINARY      shift, and go to state 23
    STRUCT         shift, and go to state 24
    UNION          shift, and go to state 25
    ENUM           shift, and go to state 26
    ATOMIC         shift, and go to state 27
    ALIGNAS        shift, and go to state 28
    NORETURN       shift, and go to state 29
    THREAD_LOCAL   shift, and go to state 30
    STATIC_ASSERT  shift, and go to state 31

    preprocessor               go to state 32
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_specifier           go to state 35
    union_specifier            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    function_specifier         go to state 39
    alignment_specifier        go to state 40
    static_assert_declaration  go to state 41
    type_qualifier             go to state 42
    declaration_specifiers     go to state 43
    declaration                go to state 44
    function_definition        go to state 45
    external_declaration       go to state 88


state 48

   13 preprocessor_conditional: PP_IF . preprocessor_content

    PP_CONTENT      shift, and go to state 89
    PP_STRING       shift, and go to state 90
    LITERAL_INT     shift, and go to state 91
    LITERAL_FLOAT   shift, and go to state 92
    LITERAL_CHAR    shift, and go to state 93
    LITERAL_STRING  shift, and go to state 94
    LITERAL_ENUM    shift, and go to state 95

    preprocessor_content  go to state 96


state 49

   14 preprocessor_conditional: PP_ELIF . preprocessor_content

    PP_CONTENT      shift, and go to state 89
    PP_STRING       shift, and go to state 90
    LITERAL_INT     shift, and go to state 91
    LITERAL_FLOAT   shift, and go to state 92
    LITERAL_CHAR    shift, and go to state 93
    LITERAL_STRING  shift, and go to state 94
    LITERAL_ENUM    shift, and go to state 95

    preprocessor_content  go to state 97


state 50

   15 preprocessor_conditional: PP_ELSE .

    $default  reduce using rule 15 (preprocessor_conditional)


state 51

   16 preprocessor_conditional: PP_ENDIF .

    $default  reduce using rule 16 (preprocessor_conditional)


state 52

   17 preprocessor_conditional: PP_IFDEF . PP_SPACE IDENTIFIER

    PP_SPACE  shift, and go to state 98


state 53

   18 preprocessor_conditional: PP_IFNDEF . PP_SPACE IDENTIFIER

    PP_SPACE  shift, and go to state 99


state 54

   19 preprocessor_undefine: PP_UNDEF . PP_SPACE IDENTIFIER

    PP_SPACE  shift, and go to state 100


state 55

   20 preprocessor_define: PP_DEFINE . PP_SPACE IDENTIFIER
   21                    | PP_DEFINE . PP_SPACE IDENTIFIER PP_SPACE
   22                    | PP_DEFINE . PP_SPACE IDENTIFIER PP_SPACE preprocessor_content
   23                    | PP_DEFINE . PP_SPACE IDENTIFIER '(' preprocessor_define_args ')'
   24                    | PP_DEFINE . PP_SPACE IDENTIFIER '(' preprocessor_define_args ')' preprocessor_content

    PP_SPACE  shift, and go to state 101


state 56

   27 preprocessor_include: PP_INCLUDE . PP_STRING
   28                     | PP_INCLUDE . LITERAL_STRING
   29                     | PP_INCLUDE . PP_SPACE PP_STRING
   30                     | PP_INCLUDE . PP_SPACE LITERAL_STRING

    PP_SPACE        shift, and go to state 102
    PP_STRING       shift, and go to state 103
    LITERAL_STRING  shift, and go to state 104


state 57

   31 preprocessor_line: PP_LINE .
   32                  | PP_LINE . PP_SPACE
   33                  | PP_LINE . PP_SPACE constant
   34                  | PP_LINE . PP_SPACE constant PP_SPACE PP_STRING
   35                  | PP_LINE . PP_SPACE constant PP_SPACE LITERAL_STRING

    PP_SPACE  shift, and go to state 105

    $default  reduce using rule 31 (preprocessor_line)


state 58

   10 preprocessor: PP preprocessor_define . '\n'

    '\n'  shift, and go to state 106


state 59

    8 preprocessor: PP preprocessor_conditional . '\n'

    '\n'  shift, and go to state 107


state 60

    9 preprocessor: PP preprocessor_undefine . '\n'

    '\n'  shift, and go to state 108


state 61

   11 preprocessor: PP preprocessor_include . '\n'

    '\n'  shift, and go to state 109


state 62

   12 preprocessor: PP preprocessor_line . '\n'

    '\n'  shift, and go to state 110


state 63

  301 declaration: TYPEDEF declaration_specifiers . declarator_list ';'

    IDENTIFIER  shift, and go to state 78
    '('         shift, and go to state 79
    '*'         shift, and go to state 80

    pointer            go to state 82
    direct_declarator  go to state 83
    declarator_list    go to state 111
    declarator         go to state 112


state 64

  146 struct_specifier: STRUCT IDENTIFIER . '{' struct_declaration_list '}'
  147                 | STRUCT IDENTIFIER .

    '{'  shift, and go to state 113

    $default  reduce using rule 147 (struct_specifier)


state 65

  145 struct_specifier: STRUCT '{' . struct_declaration_list '}'

    NAME_TYPEDEF   shift, and go to state 2
    CONST          shift, and go to state 9
    RESTRICT       shift, and go to state 10
    VOLATILE       shift, and go to state 11
    SIGNED         shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    VOID           shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    SHORT          shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    FLOAT          shift, and go to state 20
    DOUBLE         shift, and go to state 21
    COMPLEX        shift, and go to state 22
    IMAGINARY      shift, and go to state 23
    STRUCT         shift, and go to state 24
    UNION          shift, and go to state 25
    ENUM           shift, and go to state 26
    ATOMIC         shift, and go to state 27
    STATIC_ASSERT  shift, and go to state 31

    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    struct_specifier           go to state 35
    struct_declaration_list    go to state 116
    struct_declaration         go to state 117
    union_specifier            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    static_assert_declaration  go to state 118
    type_qualifier             go to state 119


state 66

  159 union_specifier: UNION IDENTIFIER . '{' struct_declaration_list '}'
  160                | UNION IDENTIFIER .

    '{'  shift, and go to state 120

    $default  reduce using rule 160 (union_specifier)


state 67

  158 union_specifier: UNION '{' . struct_declaration_list '}'

    NAME_TYPEDEF   shift, and go to state 2
    CONST          shift, and go to state 9
    RESTRICT       shift, and go to state 10
    VOLATILE       shift, and go to state 11
    SIGNED         shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    VOID           shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    SHORT          shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    FLOAT          shift, and go to state 20
    DOUBLE         shift, and go to state 21
    COMPLEX        shift, and go to state 22
    IMAGINARY      shift, and go to state 23
    STRUCT         shift, and go to state 24
    UNION          shift, and go to state 25
    ENUM           shift, and go to state 26
    ATOMIC         shift, and go to state 27
    STATIC_ASSERT  shift, and go to state 31

    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    struct_specifier           go to state 35
    struct_declaration_list    go to state 121
    struct_declaration         go to state 117
    union_specifier            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    static_assert_declaration  go to state 118
    type_qualifier             go to state 119


state 68

  163 enum_specifier: ENUM IDENTIFIER . '{' enumerator_list '}'
  164               | ENUM IDENTIFIER . '{' enumerator_list ',' '}'
  165               | ENUM IDENTIFIER .

    '{'  shift, and go to state 122

    $default  reduce using rule 165 (enum_specifier)


state 69

  161 enum_specifier: ENUM '{' . enumerator_list '}'
  162               | ENUM '{' . enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 123

    enumerator_list  go to state 124
    enumerator       go to state 125


state 70

  175 atomic_type_specifier: ATOMIC '(' . type_name ')'

    NAME_TYPEDEF  shift, and go to state 2
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27

    type_specifier            go to state 114
    specifier_qualifier_list  go to state 126
    struct_specifier          go to state 35
    union_specifier           go to state 36
    enum_specifier            go to state 37
    atomic_type_specifier     go to state 38
    type_name                 go to state 127
    type_qualifier            go to state 119


state 71

  178 alignment_specifier: ALIGNAS '(' . type_name ')'
  179                    | ALIGNAS '(' . expression_constant ')'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    NAME_TYPEDEF    shift, and go to state 2
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    VOID            shift, and go to state 14
    BOOL            shift, and go to state 15
    CHAR            shift, and go to state 16
    SHORT           shift, and go to state 17
    INT             shift, and go to state 18
    LONG            shift, and go to state 19
    FLOAT           shift, and go to state 20
    DOUBLE          shift, and go to state 21
    COMPLEX         shift, and go to state 22
    IMAGINARY       shift, and go to state 23
    STRUCT          shift, and go to state 24
    UNION           shift, and go to state 25
    ENUM            shift, and go to state 26
    ATOMIC          shift, and go to state 27
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 163
    expression_constant        go to state 164
    type_specifier             go to state 114
    specifier_qualifier_list   go to state 126
    struct_specifier           go to state 35
    union_specifier            go to state 36
    enum_specifier             go to state 37
    generic_selection          go to state 165
    atomic_type_specifier      go to state 38
    type_name                  go to state 166
    type_qualifier             go to state 119


state 72

  203 static_assert_declaration: STATIC_ASSERT '(' . expression_constant ',' LITERAL_STRING ')' ';'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 163
    expression_constant        go to state 167
    generic_selection          go to state 165


state 73

  291 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 291 (declaration_specifiers)


state 74

  293 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 293 (declaration_specifiers)


state 75

  297 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 297 (declaration_specifiers)


state 76

  299 declaration_specifiers: alignment_specifier declaration_specifiers .

    $default  reduce using rule 299 (declaration_specifiers)


state 77

  295 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 295 (declaration_specifiers)


state 78

  269 direct_declarator: IDENTIFIER .

    $default  reduce using rule 269 (direct_declarator)


state 79

  270 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 78
    '('         shift, and go to state 79
    '*'         shift, and go to state 80

    pointer            go to state 82
    direct_declarator  go to state 83
    declarator         go to state 168


state 80

  241 pointer: '*' . type_qualifier_list pointer
  242        | '*' . type_qualifier_list
  243        | '*' . pointer
  244        | '*' .

    CONST     shift, and go to state 9
    RESTRICT  shift, and go to state 10
    VOLATILE  shift, and go to state 11
    ATOMIC    shift, and go to state 169
    '*'       shift, and go to state 80

    $default  reduce using rule 244 (pointer)

    type_qualifier       go to state 170
    type_qualifier_list  go to state 171
    pointer              go to state 172


state 81

  302 declaration: declaration_specifiers ';' .

    $default  reduce using rule 302 (declaration)


state 82

  285 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 78
    '('         shift, and go to state 79

    direct_declarator  go to state 173


state 83

  271 direct_declarator: direct_declarator . '[' ']'
  272                  | direct_declarator . '[' '*' ']'
  273                  | direct_declarator . '[' STATIC type_qualifier_list expression_assignment ']'
  274                  | direct_declarator . '[' STATIC expression_assignment ']'
  275                  | direct_declarator . '[' type_qualifier_list '*' ']'
  276                  | direct_declarator . '[' type_qualifier_list STATIC expression_assignment ']'
  277                  | direct_declarator . '[' type_qualifier_list expression_assignment ']'
  278                  | direct_declarator . '[' type_qualifier_list ']'
  279                  | direct_declarator . '[' expression_assignment ']'
  280                  | direct_declarator . '(' parameter_type_list ')'
  281                  | direct_declarator . '(' ')'
  282                  | direct_declarator . '(' identifier_list ')'
  286 declarator: direct_declarator .

    '('  shift, and go to state 174
    '['  shift, and go to state 175

    $default  reduce using rule 286 (declarator)


state 84

  289 declarator_initializer: declarator . '=' initializer
  290                       | declarator .
  307 function_definition: declaration_specifiers declarator . declaration_list compound_statement
  308                    | declaration_specifiers declarator . compound_statement

    NAME_TYPEDEF   shift, and go to state 2
    TYPEDEF        shift, and go to state 3
    EXTERN         shift, and go to state 4
    STATIC         shift, and go to state 5
    AUTO           shift, and go to state 6
    REGISTER       shift, and go to state 7
    INLINE         shift, and go to state 8
    CONST          shift, and go to state 9
    RESTRICT       shift, and go to state 10
    VOLATILE       shift, and go to state 11
    SIGNED         shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    VOID           shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    SHORT          shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    FLOAT          shift, and go to state 20
    DOUBLE         shift, and go to state 21
    COMPLEX        shift, and go to state 22
    IMAGINARY      shift, and go to state 23
    STRUCT         shift, and go to state 24
    UNION          shift, and go to state 25
    ENUM           shift, and go to state 26
    ATOMIC         shift, and go to state 27
    ALIGNAS        shift, and go to state 28
    NORETURN       shift, and go to state 29
    THREAD_LOCAL   shift, and go to state 30
    STATIC_ASSERT  shift, and go to state 31
    '{'            shift, and go to state 176
    '='            shift, and go to state 177

    $default  reduce using rule 290 (declarator_initializer)

    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_specifier           go to state 35
    union_specifier            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    function_specifier         go to state 39
    alignment_specifier        go to state 40
    static_assert_declaration  go to state 41
    compound_statement         go to state 178
    type_qualifier             go to state 42
    declaration_specifiers     go to state 179
    declaration                go to state 180
    declaration_list           go to state 181


state 85

  288 declarator_initializer_list: declarator_initializer_list . ',' declarator_initializer
  303 declaration: declaration_specifiers declarator_initializer_list . ';'

    ','  shift, and go to state 182
    ';'  shift, and go to state 183


state 86

  287 declarator_initializer_list: declarator_initializer .

    $default  reduce using rule 287 (declarator_initializer_list)


state 87

    0 $accept: translation_unit $end .

    $default  accept


state 88

  313 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 313 (translation_unit)


state 89

    7 preprocessor_content: PP_CONTENT .

    $default  reduce using rule 7 (preprocessor_content)


state 90

    6 preprocessor_content: PP_STRING .

    $default  reduce using rule 6 (preprocessor_content)


state 91

    1 preprocessor_content: LITERAL_INT .

    $default  reduce using rule 1 (preprocessor_content)


state 92

    2 preprocessor_content: LITERAL_FLOAT .

    $default  reduce using rule 2 (preprocessor_content)


state 93

    3 preprocessor_content: LITERAL_CHAR .

    $default  reduce using rule 3 (preprocessor_content)


state 94

    4 preprocessor_content: LITERAL_STRING .

    $default  reduce using rule 4 (preprocessor_content)


state 95

    5 preprocessor_content: LITERAL_ENUM .

    $default  reduce using rule 5 (preprocessor_content)


state 96

   13 preprocessor_conditional: PP_IF preprocessor_content .

    $default  reduce using rule 13 (preprocessor_conditional)


state 97

   14 preprocessor_conditional: PP_ELIF preprocessor_content .

    $default  reduce using rule 14 (preprocessor_conditional)


state 98

   17 preprocessor_conditional: PP_IFDEF PP_SPACE . IDENTIFIER

    IDENTIFIER  shift, and go to state 184


state 99

   18 preprocessor_conditional: PP_IFNDEF PP_SPACE . IDENTIFIER

    IDENTIFIER  shift, and go to state 185


state 100

   19 preprocessor_undefine: PP_UNDEF PP_SPACE . IDENTIFIER

    IDENTIFIER  shift, and go to state 186


state 101

   20 preprocessor_define: PP_DEFINE PP_SPACE . IDENTIFIER
   21                    | PP_DEFINE PP_SPACE . IDENTIFIER PP_SPACE
   22                    | PP_DEFINE PP_SPACE . IDENTIFIER PP_SPACE preprocessor_content
   23                    | PP_DEFINE PP_SPACE . IDENTIFIER '(' preprocessor_define_args ')'
   24                    | PP_DEFINE PP_SPACE . IDENTIFIER '(' preprocessor_define_args ')' preprocessor_content

    IDENTIFIER  shift, and go to state 187


state 102

   29 preprocessor_include: PP_INCLUDE PP_SPACE . PP_STRING
   30                     | PP_INCLUDE PP_SPACE . LITERAL_STRING

    PP_STRING       shift, and go to state 188
    LITERAL_STRING  shift, and go to state 189


state 103

   27 preprocessor_include: PP_INCLUDE PP_STRING .

    $default  reduce using rule 27 (preprocessor_include)


state 104

   28 preprocessor_include: PP_INCLUDE LITERAL_STRING .

    $default  reduce using rule 28 (preprocessor_include)


state 105

   32 preprocessor_line: PP_LINE PP_SPACE .
   33                  | PP_LINE PP_SPACE . constant
   34                  | PP_LINE PP_SPACE . constant PP_SPACE PP_STRING
   35                  | PP_LINE PP_SPACE . constant PP_SPACE LITERAL_STRING

    LITERAL_INT    shift, and go to state 129
    LITERAL_FLOAT  shift, and go to state 130
    LITERAL_CHAR   shift, and go to state 131
    LITERAL_ENUM   shift, and go to state 133

    $default  reduce using rule 32 (preprocessor_line)

    constant  go to state 190


state 106

   10 preprocessor: PP preprocessor_define '\n' .

    $default  reduce using rule 10 (preprocessor)


state 107

    8 preprocessor: PP preprocessor_conditional '\n' .

    $default  reduce using rule 8 (preprocessor)


state 108

    9 preprocessor: PP preprocessor_undefine '\n' .

    $default  reduce using rule 9 (preprocessor)


state 109

   11 preprocessor: PP preprocessor_include '\n' .

    $default  reduce using rule 11 (preprocessor)


state 110

   12 preprocessor: PP preprocessor_line '\n' .

    $default  reduce using rule 12 (preprocessor)


state 111

  284 declarator_list: declarator_list . ',' declarator
  301 declaration: TYPEDEF declaration_specifiers declarator_list . ';'

    ','  shift, and go to state 191
    ';'  shift, and go to state 192


state 112

  283 declarator_list: declarator .

    $default  reduce using rule 283 (declarator_list)


state 113

  146 struct_specifier: STRUCT IDENTIFIER '{' . struct_declaration_list '}'

    NAME_TYPEDEF   shift, and go to state 2
    CONST          shift, and go to state 9
    RESTRICT       shift, and go to state 10
    VOLATILE       shift, and go to state 11
    SIGNED         shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    VOID           shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    SHORT          shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    FLOAT          shift, and go to state 20
    DOUBLE         shift, and go to state 21
    COMPLEX        shift, and go to state 22
    IMAGINARY      shift, and go to state 23
    STRUCT         shift, and go to state 24
    UNION          shift, and go to state 25
    ENUM           shift, and go to state 26
    ATOMIC         shift, and go to state 27
    STATIC_ASSERT  shift, and go to state 31

    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    struct_specifier           go to state 35
    struct_declaration_list    go to state 193
    struct_declaration         go to state 117
    union_specifier            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    static_assert_declaration  go to state 118
    type_qualifier             go to state 119


state 114

  141 specifier_qualifier_list: type_specifier . specifier_qualifier_list
  142                         | type_specifier .

    NAME_TYPEDEF  shift, and go to state 2
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27

    $default  reduce using rule 142 (specifier_qualifier_list)

    type_specifier            go to state 114
    specifier_qualifier_list  go to state 194
    struct_specifier          go to state 35
    union_specifier           go to state 36
    enum_specifier            go to state 37
    atomic_type_specifier     go to state 38
    type_qualifier            go to state 119


state 115

  150 struct_declaration: specifier_qualifier_list . ';'
  151                   | specifier_qualifier_list . struct_declarator_list ';'

    IDENTIFIER  shift, and go to state 78
    '('         shift, and go to state 79
    '*'         shift, and go to state 80
    ':'         shift, and go to state 195
    ';'         shift, and go to state 196

    struct_declarator_list  go to state 197
    struct_declarator       go to state 198
    pointer                 go to state 82
    direct_declarator       go to state 83
    declarator              go to state 199


state 116

  145 struct_specifier: STRUCT '{' struct_declaration_list . '}'
  149 struct_declaration_list: struct_declaration_list . struct_declaration

    NAME_TYPEDEF   shift, and go to state 2
    CONST          shift, and go to state 9
    RESTRICT       shift, and go to state 10
    VOLATILE       shift, and go to state 11
    SIGNED         shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    VOID           shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    SHORT          shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    FLOAT          shift, and go to state 20
    DOUBLE         shift, and go to state 21
    COMPLEX        shift, and go to state 22
    IMAGINARY      shift, and go to state 23
    STRUCT         shift, and go to state 24
    UNION          shift, and go to state 25
    ENUM           shift, and go to state 26
    ATOMIC         shift, and go to state 27
    STATIC_ASSERT  shift, and go to state 31
    '}'            shift, and go to state 200

    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    struct_specifier           go to state 35
    struct_declaration         go to state 201
    union_specifier            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    static_assert_declaration  go to state 118
    type_qualifier             go to state 119


state 117

  148 struct_declaration_list: struct_declaration .

    $default  reduce using rule 148 (struct_declaration_list)


state 118

  152 struct_declaration: static_assert_declaration .

    $default  reduce using rule 152 (struct_declaration)


state 119

  143 specifier_qualifier_list: type_qualifier . specifier_qualifier_list
  144                         | type_qualifier .

    NAME_TYPEDEF  shift, and go to state 2
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27

    $default  reduce using rule 144 (specifier_qualifier_list)

    type_specifier            go to state 114
    specifier_qualifier_list  go to state 202
    struct_specifier          go to state 35
    union_specifier           go to state 36
    enum_specifier            go to state 37
    atomic_type_specifier     go to state 38
    type_qualifier            go to state 119


state 120

  159 union_specifier: UNION IDENTIFIER '{' . struct_declaration_list '}'

    NAME_TYPEDEF   shift, and go to state 2
    CONST          shift, and go to state 9
    RESTRICT       shift, and go to state 10
    VOLATILE       shift, and go to state 11
    SIGNED         shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    VOID           shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    SHORT          shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    FLOAT          shift, and go to state 20
    DOUBLE         shift, and go to state 21
    COMPLEX        shift, and go to state 22
    IMAGINARY      shift, and go to state 23
    STRUCT         shift, and go to state 24
    UNION          shift, and go to state 25
    ENUM           shift, and go to state 26
    ATOMIC         shift, and go to state 27
    STATIC_ASSERT  shift, and go to state 31

    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    struct_specifier           go to state 35
    struct_declaration_list    go to state 203
    struct_declaration         go to state 117
    union_specifier            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    static_assert_declaration  go to state 118
    type_qualifier             go to state 119


state 121

  149 struct_declaration_list: struct_declaration_list . struct_declaration
  158 union_specifier: UNION '{' struct_declaration_list . '}'

    NAME_TYPEDEF   shift, and go to state 2
    CONST          shift, and go to state 9
    RESTRICT       shift, and go to state 10
    VOLATILE       shift, and go to state 11
    SIGNED         shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    VOID           shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    SHORT          shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    FLOAT          shift, and go to state 20
    DOUBLE         shift, and go to state 21
    COMPLEX        shift, and go to state 22
    IMAGINARY      shift, and go to state 23
    STRUCT         shift, and go to state 24
    UNION          shift, and go to state 25
    ENUM           shift, and go to state 26
    ATOMIC         shift, and go to state 27
    STATIC_ASSERT  shift, and go to state 31
    '}'            shift, and go to state 204

    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    struct_specifier           go to state 35
    struct_declaration         go to state 201
    union_specifier            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    static_assert_declaration  go to state 118
    type_qualifier             go to state 119


state 122

  163 enum_specifier: ENUM IDENTIFIER '{' . enumerator_list '}'
  164               | ENUM IDENTIFIER '{' . enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 123

    enumerator_list  go to state 205
    enumerator       go to state 125


state 123

  168 enumerator: IDENTIFIER . '=' expression_constant
  169           | IDENTIFIER .

    '='  shift, and go to state 206

    $default  reduce using rule 169 (enumerator)


state 124

  161 enum_specifier: ENUM '{' enumerator_list . '}'
  162               | ENUM '{' enumerator_list . ',' '}'
  167 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 207
    '}'  shift, and go to state 208


state 125

  166 enumerator_list: enumerator .

    $default  reduce using rule 166 (enumerator_list)


state 126

  189 type_name: specifier_qualifier_list . abstract_declarator
  190          | specifier_qualifier_list .

    '('  shift, and go to state 209
    '['  shift, and go to state 210
    '*'  shift, and go to state 80

    $default  reduce using rule 190 (type_name)

    pointer                     go to state 211
    direct_abstract_declarator  go to state 212
    abstract_declarator         go to state 213


state 127

  175 atomic_type_specifier: ATOMIC '(' type_name . ')'

    ')'  shift, and go to state 214


state 128

   41 expression_primary: IDENTIFIER .

    $default  reduce using rule 41 (expression_primary)


state 129

   36 constant: LITERAL_INT .

    $default  reduce using rule 36 (constant)


state 130

   38 constant: LITERAL_FLOAT .

    $default  reduce using rule 38 (constant)


state 131

   37 constant: LITERAL_CHAR .

    $default  reduce using rule 37 (constant)


state 132

   40 string: LITERAL_STRING .

    $default  reduce using rule 40 (string)


state 133

   39 constant: LITERAL_ENUM .

    $default  reduce using rule 39 (constant)


state 134

   62 expression_unary: SIZEOF . expression_unary
   63                 | SIZEOF . '(' type_name ')'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 215
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant            go to state 146
    string              go to state 147
    expression_primary  go to state 148
    expression_postfix  go to state 149
    expression_unary    go to state 216
    unary_operator      go to state 151
    generic_selection   go to state 165


state 135

   64 expression_unary: ALIGNOF . '(' type_name ')'

    '('  shift, and go to state 217


state 136

   59 expression_unary: OP_INC . expression_unary

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 218
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant            go to state 146
    string              go to state 147
    expression_primary  go to state 148
    expression_postfix  go to state 149
    expression_unary    go to state 219
    unary_operator      go to state 151
    generic_selection   go to state 165


state 137

   60 expression_unary: OP_DEC . expression_unary

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 218
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant            go to state 146
    string              go to state 147
    expression_primary  go to state 148
    expression_postfix  go to state 149
    expression_unary    go to state 220
    unary_operator      go to state 151
    generic_selection   go to state 165


state 138

  170 generic_selection: GENERIC . '(' expression_assignment ',' generic_assoc_list ')'

    '('  shift, and go to state 221


state 139

   44 expression_primary: '(' . expression ')'
   54 expression_postfix: '(' . type_name ')' '{' initializer_list '}'
   55                   | '(' . type_name ')' '{' initializer_list ',' '}'
   72 expression_cast: '(' . type_name ')' expression_cast

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    NAME_TYPEDEF    shift, and go to state 2
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    VOID            shift, and go to state 14
    BOOL            shift, and go to state 15
    CHAR            shift, and go to state 16
    SHORT           shift, and go to state 17
    INT             shift, and go to state 18
    LONG            shift, and go to state 19
    FLOAT           shift, and go to state 20
    DOUBLE          shift, and go to state 21
    COMPLEX         shift, and go to state 22
    IMAGINARY       shift, and go to state 23
    STRUCT          shift, and go to state 24
    UNION           shift, and go to state 25
    ENUM            shift, and go to state 26
    ATOMIC          shift, and go to state 27
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 225
    type_specifier             go to state 114
    specifier_qualifier_list   go to state 126
    struct_specifier           go to state 35
    union_specifier            go to state 36
    enum_specifier             go to state 37
    generic_selection          go to state 165
    atomic_type_specifier      go to state 38
    type_name                  go to state 226
    type_qualifier             go to state 119


state 140

   65 unary_operator: '&' .

    $default  reduce using rule 65 (unary_operator)


state 141

   66 unary_operator: '*' .

    $default  reduce using rule 66 (unary_operator)


state 142

   67 unary_operator: '+' .

    $default  reduce using rule 67 (unary_operator)


state 143

   68 unary_operator: '-' .

    $default  reduce using rule 68 (unary_operator)


state 144

   69 unary_operator: '~' .

    $default  reduce using rule 69 (unary_operator)


state 145

   70 unary_operator: '!' .

    $default  reduce using rule 70 (unary_operator)


state 146

   42 expression_primary: constant .

    $default  reduce using rule 42 (expression_primary)


state 147

   43 expression_primary: string .

    $default  reduce using rule 43 (expression_primary)


state 148

   46 expression_postfix: expression_primary .

    $default  reduce using rule 46 (expression_postfix)


state 149

   47 expression_postfix: expression_postfix . '[' expression ']'
   48                   | expression_postfix . '(' ')'
   49                   | expression_postfix . '(' argument_expression_list ')'
   50                   | expression_postfix . '.' IDENTIFIER
   51                   | expression_postfix . OP_PTR IDENTIFIER
   52                   | expression_postfix . OP_INC
   53                   | expression_postfix . OP_DEC
   58 expression_unary: expression_postfix .

    OP_PTR  shift, and go to state 227
    OP_INC  shift, and go to state 228
    OP_DEC  shift, and go to state 229
    '('     shift, and go to state 230
    '['     shift, and go to state 231
    '.'     shift, and go to state 232

    $default  reduce using rule 58 (expression_unary)


state 150

   71 expression_cast: expression_unary .

    $default  reduce using rule 71 (expression_cast)


state 151

   61 expression_unary: unary_operator . expression_cast

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant            go to state 146
    string              go to state 147
    expression_primary  go to state 148
    expression_postfix  go to state 149
    expression_unary    go to state 150
    unary_operator      go to state 151
    expression_cast     go to state 233
    generic_selection   go to state 165


state 152

   73 expression_multiplicative: expression_cast .

    $default  reduce using rule 73 (expression_multiplicative)


state 153

   74 expression_multiplicative: expression_multiplicative . '*' expression_cast
   75                          | expression_multiplicative . '/' expression_cast
   76                          | expression_multiplicative . '%' expression_cast
   77 expression_additive: expression_multiplicative .

    '*'  shift, and go to state 234
    '/'  shift, and go to state 235
    '%'  shift, and go to state 236

    $default  reduce using rule 77 (expression_additive)


state 154

   78 expression_additive: expression_additive . '+' expression_multiplicative
   79                    | expression_additive . '-' expression_multiplicative
   80 expression_shift: expression_additive .

    '+'  shift, and go to state 237
    '-'  shift, and go to state 238

    $default  reduce using rule 80 (expression_shift)


state 155

   81 expression_shift: expression_shift . OP_BITLEFT expression_additive
   82                 | expression_shift . OP_BITRIGHT expression_additive
   83 expression_relational: expression_shift .

    OP_BITLEFT   shift, and go to state 239
    OP_BITRIGHT  shift, and go to state 240

    $default  reduce using rule 83 (expression_relational)


state 156

   84 expression_relational: expression_relational . OP_LT expression_shift
   85                      | expression_relational . OP_GT expression_shift
   86                      | expression_relational . OP_LTE expression_shift
   87                      | expression_relational . OP_GTE expression_shift
   88 expression_equality: expression_relational .

    OP_LT   shift, and go to state 241
    OP_GT   shift, and go to state 242
    OP_LTE  shift, and go to state 243
    OP_GTE  shift, and go to state 244

    $default  reduce using rule 88 (expression_equality)


state 157

   89 expression_equality: expression_equality . OP_EQ expression_relational
   90                    | expression_equality . OP_NEQ expression_relational
   91 expression_bitwise_and: expression_equality .

    OP_EQ   shift, and go to state 245
    OP_NEQ  shift, and go to state 246

    $default  reduce using rule 91 (expression_bitwise_and)


state 158

   92 expression_bitwise_and: expression_bitwise_and . '&' expression_equality
   93 expression_bitwise_xor: expression_bitwise_and .

    '&'  shift, and go to state 247

    $default  reduce using rule 93 (expression_bitwise_xor)


state 159

   94 expression_bitwise_xor: expression_bitwise_xor . '^' expression_bitwise_and
   95 expression_bitwise_or: expression_bitwise_xor .

    '^'  shift, and go to state 248

    $default  reduce using rule 95 (expression_bitwise_or)


state 160

   96 expression_bitwise_or: expression_bitwise_or . '|' expression_bitwise_xor
   97 expression_logical_and: expression_bitwise_or .

    '|'  shift, and go to state 249

    $default  reduce using rule 97 (expression_logical_and)


state 161

   98 expression_logical_and: expression_logical_and . OP_AND expression_bitwise_or
   99 expression_logical_or: expression_logical_and .

    OP_AND  shift, and go to state 250

    $default  reduce using rule 99 (expression_logical_or)


state 162

  100 expression_logical_or: expression_logical_or . OP_OR expression_logical_and
  101 expression_ternary: expression_logical_or .
  102                   | expression_logical_or . '?' expression ':' expression_ternary

    OP_OR  shift, and go to state 251
    '?'    shift, and go to state 252

    $default  reduce using rule 101 (expression_ternary)


state 163

  118 expression_constant: expression_ternary .

    $default  reduce using rule 118 (expression_constant)


state 164

  179 alignment_specifier: ALIGNAS '(' expression_constant . ')'

    ')'  shift, and go to state 253


state 165

   45 expression_primary: generic_selection .

    $default  reduce using rule 45 (expression_primary)


state 166

  178 alignment_specifier: ALIGNAS '(' type_name . ')'

    ')'  shift, and go to state 254


state 167

  203 static_assert_declaration: STATIC_ASSERT '(' expression_constant . ',' LITERAL_STRING ')' ';'

    ','  shift, and go to state 255


state 168

  270 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 256


state 169

  238 type_qualifier: ATOMIC .

    $default  reduce using rule 238 (type_qualifier)


state 170

  239 type_qualifier_list: type_qualifier .

    $default  reduce using rule 239 (type_qualifier_list)


state 171

  240 type_qualifier_list: type_qualifier_list . type_qualifier
  241 pointer: '*' type_qualifier_list . pointer
  242        | '*' type_qualifier_list .

    CONST     shift, and go to state 9
    RESTRICT  shift, and go to state 10
    VOLATILE  shift, and go to state 11
    ATOMIC    shift, and go to state 169
    '*'       shift, and go to state 80

    $default  reduce using rule 242 (pointer)

    type_qualifier  go to state 257
    pointer         go to state 258


state 172

  243 pointer: '*' pointer .

    $default  reduce using rule 243 (pointer)


state 173

  271 direct_declarator: direct_declarator . '[' ']'
  272                  | direct_declarator . '[' '*' ']'
  273                  | direct_declarator . '[' STATIC type_qualifier_list expression_assignment ']'
  274                  | direct_declarator . '[' STATIC expression_assignment ']'
  275                  | direct_declarator . '[' type_qualifier_list '*' ']'
  276                  | direct_declarator . '[' type_qualifier_list STATIC expression_assignment ']'
  277                  | direct_declarator . '[' type_qualifier_list expression_assignment ']'
  278                  | direct_declarator . '[' type_qualifier_list ']'
  279                  | direct_declarator . '[' expression_assignment ']'
  280                  | direct_declarator . '(' parameter_type_list ')'
  281                  | direct_declarator . '(' ')'
  282                  | direct_declarator . '(' identifier_list ')'
  285 declarator: pointer direct_declarator .

    '('  shift, and go to state 174
    '['  shift, and go to state 175

    $default  reduce using rule 285 (declarator)


state 174

  280 direct_declarator: direct_declarator '(' . parameter_type_list ')'
  281                  | direct_declarator '(' . ')'
  282                  | direct_declarator '(' . identifier_list ')'

    IDENTIFIER    shift, and go to state 259
    NAME_TYPEDEF  shift, and go to state 2
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    INLINE        shift, and go to state 8
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27
    ALIGNAS       shift, and go to state 28
    NORETURN      shift, and go to state 29
    THREAD_LOCAL  shift, and go to state 30
    ')'           shift, and go to state 260

    storage_class_specifier  go to state 33
    type_specifier           go to state 34
    struct_specifier         go to state 35
    union_specifier          go to state 36
    enum_specifier           go to state 37
    atomic_type_specifier    go to state 38
    function_specifier       go to state 39
    alignment_specifier      go to state 40
    parameter_type_list      go to state 261
    parameter_list           go to state 262
    parameter_declaration    go to state 263
    identifier_list          go to state 264
    type_qualifier           go to state 42
    declaration_specifiers   go to state 265


state 175

  271 direct_declarator: direct_declarator '[' . ']'
  272                  | direct_declarator '[' . '*' ']'
  273                  | direct_declarator '[' . STATIC type_qualifier_list expression_assignment ']'
  274                  | direct_declarator '[' . STATIC expression_assignment ']'
  275                  | direct_declarator '[' . type_qualifier_list '*' ']'
  276                  | direct_declarator '[' . type_qualifier_list STATIC expression_assignment ']'
  277                  | direct_declarator '[' . type_qualifier_list expression_assignment ']'
  278                  | direct_declarator '[' . type_qualifier_list ']'
  279                  | direct_declarator '[' . expression_assignment ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    STATIC          shift, and go to state 266
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    ATOMIC          shift, and go to state 169
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    ']'             shift, and go to state 267
    '&'             shift, and go to state 140
    '*'             shift, and go to state 268
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 269
    generic_selection          go to state 165
    type_qualifier             go to state 170
    type_qualifier_list        go to state 270


state 176

  233 compound_statement: '{' . '}'
  234                   | '{' . block_item_list '}'

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    NAME_TYPEDEF    shift, and go to state 2
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    TYPEDEF         shift, and go to state 3
    EXTERN          shift, and go to state 4
    STATIC          shift, and go to state 5
    AUTO            shift, and go to state 6
    REGISTER        shift, and go to state 7
    INLINE          shift, and go to state 8
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    VOID            shift, and go to state 14
    BOOL            shift, and go to state 15
    CHAR            shift, and go to state 16
    SHORT           shift, and go to state 17
    INT             shift, and go to state 18
    LONG            shift, and go to state 19
    FLOAT           shift, and go to state 20
    DOUBLE          shift, and go to state 21
    COMPLEX         shift, and go to state 22
    IMAGINARY       shift, and go to state 23
    STRUCT          shift, and go to state 24
    UNION           shift, and go to state 25
    ENUM            shift, and go to state 26
    ATOMIC          shift, and go to state 27
    ALIGNAS         shift, and go to state 28
    NORETURN        shift, and go to state 29
    THREAD_LOCAL    shift, and go to state 30
    GENERIC         shift, and go to state 138
    STATIC_ASSERT   shift, and go to state 31
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '}'             shift, and go to state 283
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_specifier           go to state 35
    union_specifier            go to state 36
    enum_specifier             go to state 37
    generic_selection          go to state 165
    atomic_type_specifier      go to state 38
    function_specifier         go to state 39
    alignment_specifier        go to state 40
    static_assert_declaration  go to state 41
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 291
    block_item_list            go to state 292
    block_item                 go to state 293
    compound_statement         go to state 294
    type_qualifier             go to state 42
    declaration_specifiers     go to state 179
    declaration                go to state 295


state 177

  289 declarator_initializer: declarator '=' . initializer

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 296
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 297
    generic_selection          go to state 165
    initializer                go to state 298


state 178

  308 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 308 (function_definition)


state 179

  302 declaration: declaration_specifiers . ';'
  303            | declaration_specifiers . declarator_initializer_list ';'

    IDENTIFIER  shift, and go to state 78
    '('         shift, and go to state 79
    '*'         shift, and go to state 80
    ';'         shift, and go to state 81

    pointer                      go to state 82
    direct_declarator            go to state 83
    declarator                   go to state 299
    declarator_initializer_list  go to state 85
    declarator_initializer       go to state 86


state 180

  305 declaration_list: declaration .

    $default  reduce using rule 305 (declaration_list)


state 181

  306 declaration_list: declaration_list . declaration
  307 function_definition: declaration_specifiers declarator declaration_list . compound_statement

    NAME_TYPEDEF   shift, and go to state 2
    TYPEDEF        shift, and go to state 3
    EXTERN         shift, and go to state 4
    STATIC         shift, and go to state 5
    AUTO           shift, and go to state 6
    REGISTER       shift, and go to state 7
    INLINE         shift, and go to state 8
    CONST          shift, and go to state 9
    RESTRICT       shift, and go to state 10
    VOLATILE       shift, and go to state 11
    SIGNED         shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    VOID           shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    SHORT          shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    FLOAT          shift, and go to state 20
    DOUBLE         shift, and go to state 21
    COMPLEX        shift, and go to state 22
    IMAGINARY      shift, and go to state 23
    STRUCT         shift, and go to state 24
    UNION          shift, and go to state 25
    ENUM           shift, and go to state 26
    ATOMIC         shift, and go to state 27
    ALIGNAS        shift, and go to state 28
    NORETURN       shift, and go to state 29
    THREAD_LOCAL   shift, and go to state 30
    STATIC_ASSERT  shift, and go to state 31
    '{'            shift, and go to state 176

    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_specifier           go to state 35
    union_specifier            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    function_specifier         go to state 39
    alignment_specifier        go to state 40
    static_assert_declaration  go to state 41
    compound_statement         go to state 300
    type_qualifier             go to state 42
    declaration_specifiers     go to state 179
    declaration                go to state 301


state 182

  288 declarator_initializer_list: declarator_initializer_list ',' . declarator_initializer

    IDENTIFIER  shift, and go to state 78
    '('         shift, and go to state 79
    '*'         shift, and go to state 80

    pointer                 go to state 82
    direct_declarator       go to state 83
    declarator              go to state 299
    declarator_initializer  go to state 302


state 183

  303 declaration: declaration_specifiers declarator_initializer_list ';' .

    $default  reduce using rule 303 (declaration)


state 184

   17 preprocessor_conditional: PP_IFDEF PP_SPACE IDENTIFIER .

    $default  reduce using rule 17 (preprocessor_conditional)


state 185

   18 preprocessor_conditional: PP_IFNDEF PP_SPACE IDENTIFIER .

    $default  reduce using rule 18 (preprocessor_conditional)


state 186

   19 preprocessor_undefine: PP_UNDEF PP_SPACE IDENTIFIER .

    $default  reduce using rule 19 (preprocessor_undefine)


state 187

   20 preprocessor_define: PP_DEFINE PP_SPACE IDENTIFIER .
   21                    | PP_DEFINE PP_SPACE IDENTIFIER . PP_SPACE
   22                    | PP_DEFINE PP_SPACE IDENTIFIER . PP_SPACE preprocessor_content
   23                    | PP_DEFINE PP_SPACE IDENTIFIER . '(' preprocessor_define_args ')'
   24                    | PP_DEFINE PP_SPACE IDENTIFIER . '(' preprocessor_define_args ')' preprocessor_content

    PP_SPACE  shift, and go to state 303
    '('       shift, and go to state 304

    $default  reduce using rule 20 (preprocessor_define)


state 188

   29 preprocessor_include: PP_INCLUDE PP_SPACE PP_STRING .

    $default  reduce using rule 29 (preprocessor_include)


state 189

   30 preprocessor_include: PP_INCLUDE PP_SPACE LITERAL_STRING .

    $default  reduce using rule 30 (preprocessor_include)


state 190

   33 preprocessor_line: PP_LINE PP_SPACE constant .
   34                  | PP_LINE PP_SPACE constant . PP_SPACE PP_STRING
   35                  | PP_LINE PP_SPACE constant . PP_SPACE LITERAL_STRING

    PP_SPACE  shift, and go to state 305

    $default  reduce using rule 33 (preprocessor_line)


state 191

  284 declarator_list: declarator_list ',' . declarator

    IDENTIFIER  shift, and go to state 78
    '('         shift, and go to state 79
    '*'         shift, and go to state 80

    pointer            go to state 82
    direct_declarator  go to state 83
    declarator         go to state 306


state 192

  301 declaration: TYPEDEF declaration_specifiers declarator_list ';' .

    $default  reduce using rule 301 (declaration)


state 193

  146 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list . '}'
  149 struct_declaration_list: struct_declaration_list . struct_declaration

    NAME_TYPEDEF   shift, and go to state 2
    CONST          shift, and go to state 9
    RESTRICT       shift, and go to state 10
    VOLATILE       shift, and go to state 11
    SIGNED         shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    VOID           shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    SHORT          shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    FLOAT          shift, and go to state 20
    DOUBLE         shift, and go to state 21
    COMPLEX        shift, and go to state 22
    IMAGINARY      shift, and go to state 23
    STRUCT         shift, and go to state 24
    UNION          shift, and go to state 25
    ENUM           shift, and go to state 26
    ATOMIC         shift, and go to state 27
    STATIC_ASSERT  shift, and go to state 31
    '}'            shift, and go to state 307

    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    struct_specifier           go to state 35
    struct_declaration         go to state 201
    union_specifier            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    static_assert_declaration  go to state 118
    type_qualifier             go to state 119


state 194

  141 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 141 (specifier_qualifier_list)


state 195

  155 struct_declarator: ':' . expression_constant

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 163
    expression_constant        go to state 308
    generic_selection          go to state 165


state 196

  150 struct_declaration: specifier_qualifier_list ';' .

    $default  reduce using rule 150 (struct_declaration)


state 197

  151 struct_declaration: specifier_qualifier_list struct_declarator_list . ';'
  154 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 309
    ';'  shift, and go to state 310


state 198

  153 struct_declarator_list: struct_declarator .

    $default  reduce using rule 153 (struct_declarator_list)


state 199

  156 struct_declarator: declarator . ':' expression_constant
  157                  | declarator .

    ':'  shift, and go to state 311

    $default  reduce using rule 157 (struct_declarator)


state 200

  145 struct_specifier: STRUCT '{' struct_declaration_list '}' .

    $default  reduce using rule 145 (struct_specifier)


state 201

  149 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 149 (struct_declaration_list)


state 202

  143 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 143 (specifier_qualifier_list)


state 203

  149 struct_declaration_list: struct_declaration_list . struct_declaration
  159 union_specifier: UNION IDENTIFIER '{' struct_declaration_list . '}'

    NAME_TYPEDEF   shift, and go to state 2
    CONST          shift, and go to state 9
    RESTRICT       shift, and go to state 10
    VOLATILE       shift, and go to state 11
    SIGNED         shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    VOID           shift, and go to state 14
    BOOL           shift, and go to state 15
    CHAR           shift, and go to state 16
    SHORT          shift, and go to state 17
    INT            shift, and go to state 18
    LONG           shift, and go to state 19
    FLOAT          shift, and go to state 20
    DOUBLE         shift, and go to state 21
    COMPLEX        shift, and go to state 22
    IMAGINARY      shift, and go to state 23
    STRUCT         shift, and go to state 24
    UNION          shift, and go to state 25
    ENUM           shift, and go to state 26
    ATOMIC         shift, and go to state 27
    STATIC_ASSERT  shift, and go to state 31
    '}'            shift, and go to state 312

    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    struct_specifier           go to state 35
    struct_declaration         go to state 201
    union_specifier            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    static_assert_declaration  go to state 118
    type_qualifier             go to state 119


state 204

  158 union_specifier: UNION '{' struct_declaration_list '}' .

    $default  reduce using rule 158 (union_specifier)


state 205

  163 enum_specifier: ENUM IDENTIFIER '{' enumerator_list . '}'
  164               | ENUM IDENTIFIER '{' enumerator_list . ',' '}'
  167 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 313
    '}'  shift, and go to state 314


state 206

  168 enumerator: IDENTIFIER '=' . expression_constant

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 163
    expression_constant        go to state 315
    generic_selection          go to state 165


state 207

  162 enum_specifier: ENUM '{' enumerator_list ',' . '}'
  167 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 123
    '}'         shift, and go to state 316

    enumerator  go to state 317


state 208

  161 enum_specifier: ENUM '{' enumerator_list '}' .

    $default  reduce using rule 161 (enum_specifier)


state 209

  245 direct_abstract_declarator: '(' . abstract_declarator ')'
  262                           | '(' . ')'
  263                           | '(' . parameter_type_list ')'

    NAME_TYPEDEF  shift, and go to state 2
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    INLINE        shift, and go to state 8
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27
    ALIGNAS       shift, and go to state 28
    NORETURN      shift, and go to state 29
    THREAD_LOCAL  shift, and go to state 30
    '('           shift, and go to state 209
    ')'           shift, and go to state 318
    '['           shift, and go to state 210
    '*'           shift, and go to state 80

    storage_class_specifier     go to state 33
    type_specifier              go to state 34
    struct_specifier            go to state 35
    union_specifier             go to state 36
    enum_specifier              go to state 37
    atomic_type_specifier       go to state 38
    function_specifier          go to state 39
    alignment_specifier         go to state 40
    parameter_type_list         go to state 319
    parameter_list              go to state 262
    parameter_declaration       go to state 263
    type_qualifier              go to state 42
    pointer                     go to state 211
    direct_abstract_declarator  go to state 212
    abstract_declarator         go to state 320
    declaration_specifiers      go to state 265


state 210

  246 direct_abstract_declarator: '[' . ']'
  247                           | '[' . '*' ']'
  248                           | '[' . STATIC type_qualifier_list expression_assignment ']'
  249                           | '[' . STATIC expression_assignment ']'
  250                           | '[' . type_qualifier_list STATIC expression_assignment ']'
  251                           | '[' . type_qualifier_list expression_assignment ']'
  252                           | '[' . type_qualifier_list ']'
  253                           | '[' . expression_assignment ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    STATIC          shift, and go to state 321
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    ATOMIC          shift, and go to state 169
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    ']'             shift, and go to state 322
    '&'             shift, and go to state 140
    '*'             shift, and go to state 323
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 324
    generic_selection          go to state 165
    type_qualifier             go to state 170
    type_qualifier_list        go to state 325


state 211

  266 abstract_declarator: pointer . direct_abstract_declarator
  267                    | pointer .

    '('  shift, and go to state 209
    '['  shift, and go to state 210

    $default  reduce using rule 267 (abstract_declarator)

    direct_abstract_declarator  go to state 326


state 212

  254 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
  255                           | direct_abstract_declarator . '[' '*' ']'
  256                           | direct_abstract_declarator . '[' STATIC type_qualifier_list expression_assignment ']'
  257                           | direct_abstract_declarator . '[' STATIC expression_assignment ']'
  258                           | direct_abstract_declarator . '[' type_qualifier_list expression_assignment ']'
  259                           | direct_abstract_declarator . '[' type_qualifier_list STATIC expression_assignment ']'
  260                           | direct_abstract_declarator . '[' type_qualifier_list ']'
  261                           | direct_abstract_declarator . '[' expression_assignment ']'
  264                           | direct_abstract_declarator . '(' ')'
  265                           | direct_abstract_declarator . '(' parameter_type_list ')'
  268 abstract_declarator: direct_abstract_declarator .

    '('  shift, and go to state 327
    '['  shift, and go to state 328

    $default  reduce using rule 268 (abstract_declarator)


state 213

  189 type_name: specifier_qualifier_list abstract_declarator .

    $default  reduce using rule 189 (type_name)


state 214

  175 atomic_type_specifier: ATOMIC '(' type_name ')' .

    $default  reduce using rule 175 (atomic_type_specifier)


state 215

   44 expression_primary: '(' . expression ')'
   54 expression_postfix: '(' . type_name ')' '{' initializer_list '}'
   55                   | '(' . type_name ')' '{' initializer_list ',' '}'
   63 expression_unary: SIZEOF '(' . type_name ')'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    NAME_TYPEDEF    shift, and go to state 2
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    VOID            shift, and go to state 14
    BOOL            shift, and go to state 15
    CHAR            shift, and go to state 16
    SHORT           shift, and go to state 17
    INT             shift, and go to state 18
    LONG            shift, and go to state 19
    FLOAT           shift, and go to state 20
    DOUBLE          shift, and go to state 21
    COMPLEX         shift, and go to state 22
    IMAGINARY       shift, and go to state 23
    STRUCT          shift, and go to state 24
    UNION           shift, and go to state 25
    ENUM            shift, and go to state 26
    ATOMIC          shift, and go to state 27
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 225
    type_specifier             go to state 114
    specifier_qualifier_list   go to state 126
    struct_specifier           go to state 35
    union_specifier            go to state 36
    enum_specifier             go to state 37
    generic_selection          go to state 165
    atomic_type_specifier      go to state 38
    type_name                  go to state 329
    type_qualifier             go to state 119


state 216

   62 expression_unary: SIZEOF expression_unary .

    $default  reduce using rule 62 (expression_unary)


state 217

   64 expression_unary: ALIGNOF '(' . type_name ')'

    NAME_TYPEDEF  shift, and go to state 2
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27

    type_specifier            go to state 114
    specifier_qualifier_list  go to state 126
    struct_specifier          go to state 35
    union_specifier           go to state 36
    enum_specifier            go to state 37
    atomic_type_specifier     go to state 38
    type_name                 go to state 330
    type_qualifier            go to state 119


state 218

   44 expression_primary: '(' . expression ')'
   54 expression_postfix: '(' . type_name ')' '{' initializer_list '}'
   55                   | '(' . type_name ')' '{' initializer_list ',' '}'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    NAME_TYPEDEF    shift, and go to state 2
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    VOID            shift, and go to state 14
    BOOL            shift, and go to state 15
    CHAR            shift, and go to state 16
    SHORT           shift, and go to state 17
    INT             shift, and go to state 18
    LONG            shift, and go to state 19
    FLOAT           shift, and go to state 20
    DOUBLE          shift, and go to state 21
    COMPLEX         shift, and go to state 22
    IMAGINARY       shift, and go to state 23
    STRUCT          shift, and go to state 24
    UNION           shift, and go to state 25
    ENUM            shift, and go to state 26
    ATOMIC          shift, and go to state 27
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 225
    type_specifier             go to state 114
    specifier_qualifier_list   go to state 126
    struct_specifier           go to state 35
    union_specifier            go to state 36
    enum_specifier             go to state 37
    generic_selection          go to state 165
    atomic_type_specifier      go to state 38
    type_name                  go to state 331
    type_qualifier             go to state 119


state 219

   59 expression_unary: OP_INC expression_unary .

    $default  reduce using rule 59 (expression_unary)


state 220

   60 expression_unary: OP_DEC expression_unary .

    $default  reduce using rule 60 (expression_unary)


state 221

  170 generic_selection: GENERIC '(' . expression_assignment ',' generic_assoc_list ')'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 332
    generic_selection          go to state 165


state 222

   71 expression_cast: expression_unary .
  104 expression_assignment: expression_unary . assignment_operator expression_assignment

    OP_ASSIGN_MUL       shift, and go to state 333
    OP_ASSIGN_DIV       shift, and go to state 334
    OP_ASSIGN_MOD       shift, and go to state 335
    OP_ASSIGN_ADD       shift, and go to state 336
    OP_ASSIGN_SUB       shift, and go to state 337
    OP_ASSIGN_BITLEFT   shift, and go to state 338
    OP_ASSIGN_BITRIGHT  shift, and go to state 339
    OP_ASSIGN_BITAND    shift, and go to state 340
    OP_ASSIGN_BITXOR    shift, and go to state 341
    OP_ASSIGN_BITOR     shift, and go to state 342
    '='                 shift, and go to state 343

    $default  reduce using rule 71 (expression_cast)

    assignment_operator  go to state 344


state 223

  103 expression_assignment: expression_ternary .

    $default  reduce using rule 103 (expression_assignment)


state 224

  116 expression: expression_assignment .

    $default  reduce using rule 116 (expression)


state 225

   44 expression_primary: '(' expression . ')'
  117 expression: expression . ',' expression_assignment

    ')'  shift, and go to state 345
    ','  shift, and go to state 346


state 226

   54 expression_postfix: '(' type_name . ')' '{' initializer_list '}'
   55                   | '(' type_name . ')' '{' initializer_list ',' '}'
   72 expression_cast: '(' type_name . ')' expression_cast

    ')'  shift, and go to state 347


state 227

   51 expression_postfix: expression_postfix OP_PTR . IDENTIFIER

    IDENTIFIER  shift, and go to state 348


state 228

   52 expression_postfix: expression_postfix OP_INC .

    $default  reduce using rule 52 (expression_postfix)


state 229

   53 expression_postfix: expression_postfix OP_DEC .

    $default  reduce using rule 53 (expression_postfix)


state 230

   48 expression_postfix: expression_postfix '(' . ')'
   49                   | expression_postfix '(' . argument_expression_list ')'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    ')'             shift, and go to state 349
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    argument_expression_list   go to state 350
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 351
    generic_selection          go to state 165


state 231

   47 expression_postfix: expression_postfix '[' . expression ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 352
    generic_selection          go to state 165


state 232

   50 expression_postfix: expression_postfix '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 353


state 233

   61 expression_unary: unary_operator expression_cast .

    $default  reduce using rule 61 (expression_unary)


state 234

   74 expression_multiplicative: expression_multiplicative '*' . expression_cast

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant            go to state 146
    string              go to state 147
    expression_primary  go to state 148
    expression_postfix  go to state 149
    expression_unary    go to state 150
    unary_operator      go to state 151
    expression_cast     go to state 354
    generic_selection   go to state 165


state 235

   75 expression_multiplicative: expression_multiplicative '/' . expression_cast

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant            go to state 146
    string              go to state 147
    expression_primary  go to state 148
    expression_postfix  go to state 149
    expression_unary    go to state 150
    unary_operator      go to state 151
    expression_cast     go to state 355
    generic_selection   go to state 165


state 236

   76 expression_multiplicative: expression_multiplicative '%' . expression_cast

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant            go to state 146
    string              go to state 147
    expression_primary  go to state 148
    expression_postfix  go to state 149
    expression_unary    go to state 150
    unary_operator      go to state 151
    expression_cast     go to state 356
    generic_selection   go to state 165


state 237

   78 expression_additive: expression_additive '+' . expression_multiplicative

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 357
    generic_selection          go to state 165


state 238

   79 expression_additive: expression_additive '-' . expression_multiplicative

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 358
    generic_selection          go to state 165


state 239

   81 expression_shift: expression_shift OP_BITLEFT . expression_additive

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 359
    generic_selection          go to state 165


state 240

   82 expression_shift: expression_shift OP_BITRIGHT . expression_additive

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 360
    generic_selection          go to state 165


state 241

   84 expression_relational: expression_relational OP_LT . expression_shift

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 361
    generic_selection          go to state 165


state 242

   85 expression_relational: expression_relational OP_GT . expression_shift

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 362
    generic_selection          go to state 165


state 243

   86 expression_relational: expression_relational OP_LTE . expression_shift

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 363
    generic_selection          go to state 165


state 244

   87 expression_relational: expression_relational OP_GTE . expression_shift

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 364
    generic_selection          go to state 165


state 245

   89 expression_equality: expression_equality OP_EQ . expression_relational

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 365
    generic_selection          go to state 165


state 246

   90 expression_equality: expression_equality OP_NEQ . expression_relational

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 366
    generic_selection          go to state 165


state 247

   92 expression_bitwise_and: expression_bitwise_and '&' . expression_equality

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 367
    generic_selection          go to state 165


state 248

   94 expression_bitwise_xor: expression_bitwise_xor '^' . expression_bitwise_and

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 368
    generic_selection          go to state 165


state 249

   96 expression_bitwise_or: expression_bitwise_or '|' . expression_bitwise_xor

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 369
    generic_selection          go to state 165


state 250

   98 expression_logical_and: expression_logical_and OP_AND . expression_bitwise_or

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 370
    generic_selection          go to state 165


state 251

  100 expression_logical_or: expression_logical_or OP_OR . expression_logical_and

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 371
    generic_selection          go to state 165


state 252

  102 expression_ternary: expression_logical_or '?' . expression ':' expression_ternary

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 372
    generic_selection          go to state 165


state 253

  179 alignment_specifier: ALIGNAS '(' expression_constant ')' .

    $default  reduce using rule 179 (alignment_specifier)


state 254

  178 alignment_specifier: ALIGNAS '(' type_name ')' .

    $default  reduce using rule 178 (alignment_specifier)


state 255

  203 static_assert_declaration: STATIC_ASSERT '(' expression_constant ',' . LITERAL_STRING ')' ';'

    LITERAL_STRING  shift, and go to state 373


state 256

  270 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 270 (direct_declarator)


state 257

  240 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 240 (type_qualifier_list)


state 258

  241 pointer: '*' type_qualifier_list pointer .

    $default  reduce using rule 241 (pointer)


state 259

  187 identifier_list: IDENTIFIER .

    $default  reduce using rule 187 (identifier_list)


state 260

  281 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 281 (direct_declarator)


state 261

  280 direct_declarator: direct_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 374


state 262

  180 parameter_type_list: parameter_list . ',' ELLIPSIS
  181                    | parameter_list .
  183 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 375

    $default  reduce using rule 181 (parameter_type_list)


state 263

  182 parameter_list: parameter_declaration .

    $default  reduce using rule 182 (parameter_list)


state 264

  188 identifier_list: identifier_list . ',' IDENTIFIER
  282 direct_declarator: direct_declarator '(' identifier_list . ')'

    ')'  shift, and go to state 376
    ','  shift, and go to state 377


state 265

  184 parameter_declaration: declaration_specifiers . declarator
  185                      | declaration_specifiers . abstract_declarator
  186                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 78
    '('         shift, and go to state 378
    '['         shift, and go to state 210
    '*'         shift, and go to state 80

    $default  reduce using rule 186 (parameter_declaration)

    pointer                     go to state 379
    direct_abstract_declarator  go to state 212
    abstract_declarator         go to state 380
    direct_declarator           go to state 83
    declarator                  go to state 381


state 266

  273 direct_declarator: direct_declarator '[' STATIC . type_qualifier_list expression_assignment ']'
  274                  | direct_declarator '[' STATIC . expression_assignment ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    ATOMIC          shift, and go to state 169
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 382
    generic_selection          go to state 165
    type_qualifier             go to state 170
    type_qualifier_list        go to state 383


state 267

  271 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 271 (direct_declarator)


state 268

   66 unary_operator: '*' .
  272 direct_declarator: direct_declarator '[' '*' . ']'

    ']'  shift, and go to state 384

    $default  reduce using rule 66 (unary_operator)


state 269

  279 direct_declarator: direct_declarator '[' expression_assignment . ']'

    ']'  shift, and go to state 385


state 270

  240 type_qualifier_list: type_qualifier_list . type_qualifier
  275 direct_declarator: direct_declarator '[' type_qualifier_list . '*' ']'
  276                  | direct_declarator '[' type_qualifier_list . STATIC expression_assignment ']'
  277                  | direct_declarator '[' type_qualifier_list . expression_assignment ']'
  278                  | direct_declarator '[' type_qualifier_list . ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    STATIC          shift, and go to state 386
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    ATOMIC          shift, and go to state 169
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    ']'             shift, and go to state 387
    '&'             shift, and go to state 140
    '*'             shift, and go to state 388
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 389
    generic_selection          go to state 165
    type_qualifier             go to state 257


state 271

   41 expression_primary: IDENTIFIER .
  204 labeled_statement: IDENTIFIER . ':' statement

    ':'  shift, and go to state 390

    $default  reduce using rule 41 (expression_primary)


state 272

  209 statement_condition: IF . '(' expression ')' statement ELSE statement
  210                    | IF . '(' expression ')' statement

    '('  shift, and go to state 391


state 273

  212 statement_iteration: WHILE . '(' expression ')' statement

    '('  shift, and go to state 392


state 274

  213 statement_iteration: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 393
    compound_statement         go to state 294


state 275

  214 statement_iteration: FOR . '(' statement_expression statement_expression ')' statement
  215                    | FOR . '(' statement_expression statement_expression expression ')' statement
  216                    | FOR . '(' declaration statement_expression ')' statement
  217                    | FOR . '(' declaration statement_expression expression ')' statement

    '('  shift, and go to state 394


state 276

  221 statement_jump: RETURN . ';'
  222               | RETURN . expression ';'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 395

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 396
    generic_selection          go to state 165


state 277

  218 statement_jump: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 397


state 278

  219 statement_jump: CONTINUE . ';'

    ';'  shift, and go to state 398


state 279

  220 statement_jump: BREAK . ';'

    ';'  shift, and go to state 399


state 280

  211 statement_condition: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 400


state 281

  205 labeled_statement: CASE . expression_constant ':' statement

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 163
    expression_constant        go to state 401
    generic_selection          go to state 165


state 282

  206 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 402


state 283

  233 compound_statement: '{' '}' .

    $default  reduce using rule 233 (compound_statement)


state 284

  207 statement_expression: ';' .

    $default  reduce using rule 207 (statement_expression)


state 285

  117 expression: expression . ',' expression_assignment
  208 statement_expression: expression . ';'

    ','  shift, and go to state 346
    ';'  shift, and go to state 403


state 286

  223 statement: labeled_statement .

    $default  reduce using rule 223 (statement)


state 287

  225 statement: statement_expression .

    $default  reduce using rule 225 (statement)


state 288

  226 statement: statement_condition .

    $default  reduce using rule 226 (statement)


state 289

  227 statement: statement_iteration .

    $default  reduce using rule 227 (statement)


state 290

  228 statement: statement_jump .

    $default  reduce using rule 228 (statement)


state 291

  232 block_item: statement .

    $default  reduce using rule 232 (block_item)


state 292

  230 block_item_list: block_item_list . block_item
  234 compound_statement: '{' block_item_list . '}'

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    NAME_TYPEDEF    shift, and go to state 2
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    TYPEDEF         shift, and go to state 3
    EXTERN          shift, and go to state 4
    STATIC          shift, and go to state 5
    AUTO            shift, and go to state 6
    REGISTER        shift, and go to state 7
    INLINE          shift, and go to state 8
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    VOID            shift, and go to state 14
    BOOL            shift, and go to state 15
    CHAR            shift, and go to state 16
    SHORT           shift, and go to state 17
    INT             shift, and go to state 18
    LONG            shift, and go to state 19
    FLOAT           shift, and go to state 20
    DOUBLE          shift, and go to state 21
    COMPLEX         shift, and go to state 22
    IMAGINARY       shift, and go to state 23
    STRUCT          shift, and go to state 24
    UNION           shift, and go to state 25
    ENUM            shift, and go to state 26
    ATOMIC          shift, and go to state 27
    ALIGNAS         shift, and go to state 28
    NORETURN        shift, and go to state 29
    THREAD_LOCAL    shift, and go to state 30
    GENERIC         shift, and go to state 138
    STATIC_ASSERT   shift, and go to state 31
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '}'             shift, and go to state 404
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_specifier           go to state 35
    union_specifier            go to state 36
    enum_specifier             go to state 37
    generic_selection          go to state 165
    atomic_type_specifier      go to state 38
    function_specifier         go to state 39
    alignment_specifier        go to state 40
    static_assert_declaration  go to state 41
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 291
    block_item                 go to state 405
    compound_statement         go to state 294
    type_qualifier             go to state 42
    declaration_specifiers     go to state 179
    declaration                go to state 295


state 293

  229 block_item_list: block_item .

    $default  reduce using rule 229 (block_item_list)


state 294

  224 statement: compound_statement .

    $default  reduce using rule 224 (statement)


state 295

  231 block_item: declaration .

    $default  reduce using rule 231 (block_item)


state 296

  195 initializer: '{' . initializer_list '}'
  196            | '{' . initializer_list ',' '}'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '['             shift, and go to state 406
    '.'             shift, and go to state 407
    '{'             shift, and go to state 296
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 297
    generic_selection          go to state 165
    initializer_list           go to state 408
    initializer                go to state 409
    designation                go to state 410
    designator_list            go to state 411
    designator                 go to state 412


state 297

  197 initializer: expression_assignment .

    $default  reduce using rule 197 (initializer)


state 298

  289 declarator_initializer: declarator '=' initializer .

    $default  reduce using rule 289 (declarator_initializer)


state 299

  289 declarator_initializer: declarator . '=' initializer
  290                       | declarator .

    '='  shift, and go to state 177

    $default  reduce using rule 290 (declarator_initializer)


state 300

  307 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 307 (function_definition)


state 301

  306 declaration_list: declaration_list declaration .

    $default  reduce using rule 306 (declaration_list)


state 302

  288 declarator_initializer_list: declarator_initializer_list ',' declarator_initializer .

    $default  reduce using rule 288 (declarator_initializer_list)


state 303

   21 preprocessor_define: PP_DEFINE PP_SPACE IDENTIFIER PP_SPACE .
   22                    | PP_DEFINE PP_SPACE IDENTIFIER PP_SPACE . preprocessor_content

    PP_CONTENT      shift, and go to state 89
    PP_STRING       shift, and go to state 90
    LITERAL_INT     shift, and go to state 91
    LITERAL_FLOAT   shift, and go to state 92
    LITERAL_CHAR    shift, and go to state 93
    LITERAL_STRING  shift, and go to state 94
    LITERAL_ENUM    shift, and go to state 95

    $default  reduce using rule 21 (preprocessor_define)

    preprocessor_content  go to state 413


state 304

   23 preprocessor_define: PP_DEFINE PP_SPACE IDENTIFIER '(' . preprocessor_define_args ')'
   24                    | PP_DEFINE PP_SPACE IDENTIFIER '(' . preprocessor_define_args ')' preprocessor_content

    IDENTIFIER  shift, and go to state 414

    preprocessor_define_args  go to state 415


state 305

   34 preprocessor_line: PP_LINE PP_SPACE constant PP_SPACE . PP_STRING
   35                  | PP_LINE PP_SPACE constant PP_SPACE . LITERAL_STRING

    PP_STRING       shift, and go to state 416
    LITERAL_STRING  shift, and go to state 417


state 306

  284 declarator_list: declarator_list ',' declarator .

    $default  reduce using rule 284 (declarator_list)


state 307

  146 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 146 (struct_specifier)


state 308

  155 struct_declarator: ':' expression_constant .

    $default  reduce using rule 155 (struct_declarator)


state 309

  154 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    IDENTIFIER  shift, and go to state 78
    '('         shift, and go to state 79
    '*'         shift, and go to state 80
    ':'         shift, and go to state 195

    struct_declarator  go to state 418
    pointer            go to state 82
    direct_declarator  go to state 83
    declarator         go to state 199


state 310

  151 struct_declaration: specifier_qualifier_list struct_declarator_list ';' .

    $default  reduce using rule 151 (struct_declaration)


state 311

  156 struct_declarator: declarator ':' . expression_constant

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 163
    expression_constant        go to state 419
    generic_selection          go to state 165


state 312

  159 union_specifier: UNION IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 159 (union_specifier)


state 313

  164 enum_specifier: ENUM IDENTIFIER '{' enumerator_list ',' . '}'
  167 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 123
    '}'         shift, and go to state 420

    enumerator  go to state 317


state 314

  163 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}' .

    $default  reduce using rule 163 (enum_specifier)


state 315

  168 enumerator: IDENTIFIER '=' expression_constant .

    $default  reduce using rule 168 (enumerator)


state 316

  162 enum_specifier: ENUM '{' enumerator_list ',' '}' .

    $default  reduce using rule 162 (enum_specifier)


state 317

  167 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 167 (enumerator_list)


state 318

  262 direct_abstract_declarator: '(' ')' .

    $default  reduce using rule 262 (direct_abstract_declarator)


state 319

  263 direct_abstract_declarator: '(' parameter_type_list . ')'

    ')'  shift, and go to state 421


state 320

  245 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 422


state 321

  248 direct_abstract_declarator: '[' STATIC . type_qualifier_list expression_assignment ']'
  249                           | '[' STATIC . expression_assignment ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    ATOMIC          shift, and go to state 169
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 423
    generic_selection          go to state 165
    type_qualifier             go to state 170
    type_qualifier_list        go to state 424


state 322

  246 direct_abstract_declarator: '[' ']' .

    $default  reduce using rule 246 (direct_abstract_declarator)


state 323

   66 unary_operator: '*' .
  247 direct_abstract_declarator: '[' '*' . ']'

    ']'  shift, and go to state 425

    $default  reduce using rule 66 (unary_operator)


state 324

  253 direct_abstract_declarator: '[' expression_assignment . ']'

    ']'  shift, and go to state 426


state 325

  240 type_qualifier_list: type_qualifier_list . type_qualifier
  250 direct_abstract_declarator: '[' type_qualifier_list . STATIC expression_assignment ']'
  251                           | '[' type_qualifier_list . expression_assignment ']'
  252                           | '[' type_qualifier_list . ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    STATIC          shift, and go to state 427
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    ATOMIC          shift, and go to state 169
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    ']'             shift, and go to state 428
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 429
    generic_selection          go to state 165
    type_qualifier             go to state 257


state 326

  254 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
  255                           | direct_abstract_declarator . '[' '*' ']'
  256                           | direct_abstract_declarator . '[' STATIC type_qualifier_list expression_assignment ']'
  257                           | direct_abstract_declarator . '[' STATIC expression_assignment ']'
  258                           | direct_abstract_declarator . '[' type_qualifier_list expression_assignment ']'
  259                           | direct_abstract_declarator . '[' type_qualifier_list STATIC expression_assignment ']'
  260                           | direct_abstract_declarator . '[' type_qualifier_list ']'
  261                           | direct_abstract_declarator . '[' expression_assignment ']'
  264                           | direct_abstract_declarator . '(' ')'
  265                           | direct_abstract_declarator . '(' parameter_type_list ')'
  266 abstract_declarator: pointer direct_abstract_declarator .

    '('  shift, and go to state 327
    '['  shift, and go to state 328

    $default  reduce using rule 266 (abstract_declarator)


state 327

  264 direct_abstract_declarator: direct_abstract_declarator '(' . ')'
  265                           | direct_abstract_declarator '(' . parameter_type_list ')'

    NAME_TYPEDEF  shift, and go to state 2
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    INLINE        shift, and go to state 8
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27
    ALIGNAS       shift, and go to state 28
    NORETURN      shift, and go to state 29
    THREAD_LOCAL  shift, and go to state 30
    ')'           shift, and go to state 430

    storage_class_specifier  go to state 33
    type_specifier           go to state 34
    struct_specifier         go to state 35
    union_specifier          go to state 36
    enum_specifier           go to state 37
    atomic_type_specifier    go to state 38
    function_specifier       go to state 39
    alignment_specifier      go to state 40
    parameter_type_list      go to state 431
    parameter_list           go to state 262
    parameter_declaration    go to state 263
    type_qualifier           go to state 42
    declaration_specifiers   go to state 265


state 328

  254 direct_abstract_declarator: direct_abstract_declarator '[' . ']'
  255                           | direct_abstract_declarator '[' . '*' ']'
  256                           | direct_abstract_declarator '[' . STATIC type_qualifier_list expression_assignment ']'
  257                           | direct_abstract_declarator '[' . STATIC expression_assignment ']'
  258                           | direct_abstract_declarator '[' . type_qualifier_list expression_assignment ']'
  259                           | direct_abstract_declarator '[' . type_qualifier_list STATIC expression_assignment ']'
  260                           | direct_abstract_declarator '[' . type_qualifier_list ']'
  261                           | direct_abstract_declarator '[' . expression_assignment ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    STATIC          shift, and go to state 432
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    ATOMIC          shift, and go to state 169
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    ']'             shift, and go to state 433
    '&'             shift, and go to state 140
    '*'             shift, and go to state 434
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 435
    generic_selection          go to state 165
    type_qualifier             go to state 170
    type_qualifier_list        go to state 436


state 329

   54 expression_postfix: '(' type_name . ')' '{' initializer_list '}'
   55                   | '(' type_name . ')' '{' initializer_list ',' '}'
   63 expression_unary: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 437


state 330

   64 expression_unary: ALIGNOF '(' type_name . ')'

    ')'  shift, and go to state 438


state 331

   54 expression_postfix: '(' type_name . ')' '{' initializer_list '}'
   55                   | '(' type_name . ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 439


state 332

  170 generic_selection: GENERIC '(' expression_assignment . ',' generic_assoc_list ')'

    ','  shift, and go to state 440


state 333

  106 assignment_operator: OP_ASSIGN_MUL .

    $default  reduce using rule 106 (assignment_operator)


state 334

  107 assignment_operator: OP_ASSIGN_DIV .

    $default  reduce using rule 107 (assignment_operator)


state 335

  108 assignment_operator: OP_ASSIGN_MOD .

    $default  reduce using rule 108 (assignment_operator)


state 336

  109 assignment_operator: OP_ASSIGN_ADD .

    $default  reduce using rule 109 (assignment_operator)


state 337

  110 assignment_operator: OP_ASSIGN_SUB .

    $default  reduce using rule 110 (assignment_operator)


state 338

  111 assignment_operator: OP_ASSIGN_BITLEFT .

    $default  reduce using rule 111 (assignment_operator)


state 339

  112 assignment_operator: OP_ASSIGN_BITRIGHT .

    $default  reduce using rule 112 (assignment_operator)


state 340

  113 assignment_operator: OP_ASSIGN_BITAND .

    $default  reduce using rule 113 (assignment_operator)


state 341

  114 assignment_operator: OP_ASSIGN_BITXOR .

    $default  reduce using rule 114 (assignment_operator)


state 342

  115 assignment_operator: OP_ASSIGN_BITOR .

    $default  reduce using rule 115 (assignment_operator)


state 343

  105 assignment_operator: '=' .

    $default  reduce using rule 105 (assignment_operator)


state 344

  104 expression_assignment: expression_unary assignment_operator . expression_assignment

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 441
    generic_selection          go to state 165


state 345

   44 expression_primary: '(' expression ')' .

    $default  reduce using rule 44 (expression_primary)


state 346

  117 expression: expression ',' . expression_assignment

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 442
    generic_selection          go to state 165


state 347

   54 expression_postfix: '(' type_name ')' . '{' initializer_list '}'
   55                   | '(' type_name ')' . '{' initializer_list ',' '}'
   72 expression_cast: '(' type_name ')' . expression_cast

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 443
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant            go to state 146
    string              go to state 147
    expression_primary  go to state 148
    expression_postfix  go to state 149
    expression_unary    go to state 150
    unary_operator      go to state 151
    expression_cast     go to state 444
    generic_selection   go to state 165


state 348

   51 expression_postfix: expression_postfix OP_PTR IDENTIFIER .

    $default  reduce using rule 51 (expression_postfix)


state 349

   48 expression_postfix: expression_postfix '(' ')' .

    $default  reduce using rule 48 (expression_postfix)


state 350

   49 expression_postfix: expression_postfix '(' argument_expression_list . ')'
   57 argument_expression_list: argument_expression_list . ',' expression_assignment

    ')'  shift, and go to state 445
    ','  shift, and go to state 446


state 351

   56 argument_expression_list: expression_assignment .

    $default  reduce using rule 56 (argument_expression_list)


state 352

   47 expression_postfix: expression_postfix '[' expression . ']'
  117 expression: expression . ',' expression_assignment

    ','  shift, and go to state 346
    ']'  shift, and go to state 447


state 353

   50 expression_postfix: expression_postfix '.' IDENTIFIER .

    $default  reduce using rule 50 (expression_postfix)


state 354

   74 expression_multiplicative: expression_multiplicative '*' expression_cast .

    $default  reduce using rule 74 (expression_multiplicative)


state 355

   75 expression_multiplicative: expression_multiplicative '/' expression_cast .

    $default  reduce using rule 75 (expression_multiplicative)


state 356

   76 expression_multiplicative: expression_multiplicative '%' expression_cast .

    $default  reduce using rule 76 (expression_multiplicative)


state 357

   74 expression_multiplicative: expression_multiplicative . '*' expression_cast
   75                          | expression_multiplicative . '/' expression_cast
   76                          | expression_multiplicative . '%' expression_cast
   78 expression_additive: expression_additive '+' expression_multiplicative .

    '*'  shift, and go to state 234
    '/'  shift, and go to state 235
    '%'  shift, and go to state 236

    $default  reduce using rule 78 (expression_additive)


state 358

   74 expression_multiplicative: expression_multiplicative . '*' expression_cast
   75                          | expression_multiplicative . '/' expression_cast
   76                          | expression_multiplicative . '%' expression_cast
   79 expression_additive: expression_additive '-' expression_multiplicative .

    '*'  shift, and go to state 234
    '/'  shift, and go to state 235
    '%'  shift, and go to state 236

    $default  reduce using rule 79 (expression_additive)


state 359

   78 expression_additive: expression_additive . '+' expression_multiplicative
   79                    | expression_additive . '-' expression_multiplicative
   81 expression_shift: expression_shift OP_BITLEFT expression_additive .

    '+'  shift, and go to state 237
    '-'  shift, and go to state 238

    $default  reduce using rule 81 (expression_shift)


state 360

   78 expression_additive: expression_additive . '+' expression_multiplicative
   79                    | expression_additive . '-' expression_multiplicative
   82 expression_shift: expression_shift OP_BITRIGHT expression_additive .

    '+'  shift, and go to state 237
    '-'  shift, and go to state 238

    $default  reduce using rule 82 (expression_shift)


state 361

   81 expression_shift: expression_shift . OP_BITLEFT expression_additive
   82                 | expression_shift . OP_BITRIGHT expression_additive
   84 expression_relational: expression_relational OP_LT expression_shift .

    OP_BITLEFT   shift, and go to state 239
    OP_BITRIGHT  shift, and go to state 240

    $default  reduce using rule 84 (expression_relational)


state 362

   81 expression_shift: expression_shift . OP_BITLEFT expression_additive
   82                 | expression_shift . OP_BITRIGHT expression_additive
   85 expression_relational: expression_relational OP_GT expression_shift .

    OP_BITLEFT   shift, and go to state 239
    OP_BITRIGHT  shift, and go to state 240

    $default  reduce using rule 85 (expression_relational)


state 363

   81 expression_shift: expression_shift . OP_BITLEFT expression_additive
   82                 | expression_shift . OP_BITRIGHT expression_additive
   86 expression_relational: expression_relational OP_LTE expression_shift .

    OP_BITLEFT   shift, and go to state 239
    OP_BITRIGHT  shift, and go to state 240

    $default  reduce using rule 86 (expression_relational)


state 364

   81 expression_shift: expression_shift . OP_BITLEFT expression_additive
   82                 | expression_shift . OP_BITRIGHT expression_additive
   87 expression_relational: expression_relational OP_GTE expression_shift .

    OP_BITLEFT   shift, and go to state 239
    OP_BITRIGHT  shift, and go to state 240

    $default  reduce using rule 87 (expression_relational)


state 365

   84 expression_relational: expression_relational . OP_LT expression_shift
   85                      | expression_relational . OP_GT expression_shift
   86                      | expression_relational . OP_LTE expression_shift
   87                      | expression_relational . OP_GTE expression_shift
   89 expression_equality: expression_equality OP_EQ expression_relational .

    OP_LT   shift, and go to state 241
    OP_GT   shift, and go to state 242
    OP_LTE  shift, and go to state 243
    OP_GTE  shift, and go to state 244

    $default  reduce using rule 89 (expression_equality)


state 366

   84 expression_relational: expression_relational . OP_LT expression_shift
   85                      | expression_relational . OP_GT expression_shift
   86                      | expression_relational . OP_LTE expression_shift
   87                      | expression_relational . OP_GTE expression_shift
   90 expression_equality: expression_equality OP_NEQ expression_relational .

    OP_LT   shift, and go to state 241
    OP_GT   shift, and go to state 242
    OP_LTE  shift, and go to state 243
    OP_GTE  shift, and go to state 244

    $default  reduce using rule 90 (expression_equality)


state 367

   89 expression_equality: expression_equality . OP_EQ expression_relational
   90                    | expression_equality . OP_NEQ expression_relational
   92 expression_bitwise_and: expression_bitwise_and '&' expression_equality .

    OP_EQ   shift, and go to state 245
    OP_NEQ  shift, and go to state 246

    $default  reduce using rule 92 (expression_bitwise_and)


state 368

   92 expression_bitwise_and: expression_bitwise_and . '&' expression_equality
   94 expression_bitwise_xor: expression_bitwise_xor '^' expression_bitwise_and .

    '&'  shift, and go to state 247

    $default  reduce using rule 94 (expression_bitwise_xor)


state 369

   94 expression_bitwise_xor: expression_bitwise_xor . '^' expression_bitwise_and
   96 expression_bitwise_or: expression_bitwise_or '|' expression_bitwise_xor .

    '^'  shift, and go to state 248

    $default  reduce using rule 96 (expression_bitwise_or)


state 370

   96 expression_bitwise_or: expression_bitwise_or . '|' expression_bitwise_xor
   98 expression_logical_and: expression_logical_and OP_AND expression_bitwise_or .

    '|'  shift, and go to state 249

    $default  reduce using rule 98 (expression_logical_and)


state 371

   98 expression_logical_and: expression_logical_and . OP_AND expression_bitwise_or
  100 expression_logical_or: expression_logical_or OP_OR expression_logical_and .

    OP_AND  shift, and go to state 250

    $default  reduce using rule 100 (expression_logical_or)


state 372

  102 expression_ternary: expression_logical_or '?' expression . ':' expression_ternary
  117 expression: expression . ',' expression_assignment

    ','  shift, and go to state 346
    ':'  shift, and go to state 448


state 373

  203 static_assert_declaration: STATIC_ASSERT '(' expression_constant ',' LITERAL_STRING . ')' ';'

    ')'  shift, and go to state 449


state 374

  280 direct_declarator: direct_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 280 (direct_declarator)


state 375

  180 parameter_type_list: parameter_list ',' . ELLIPSIS
  183 parameter_list: parameter_list ',' . parameter_declaration

    NAME_TYPEDEF  shift, and go to state 2
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    INLINE        shift, and go to state 8
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ELLIPSIS      shift, and go to state 450
    ATOMIC        shift, and go to state 27
    ALIGNAS       shift, and go to state 28
    NORETURN      shift, and go to state 29
    THREAD_LOCAL  shift, and go to state 30

    storage_class_specifier  go to state 33
    type_specifier           go to state 34
    struct_specifier         go to state 35
    union_specifier          go to state 36
    enum_specifier           go to state 37
    atomic_type_specifier    go to state 38
    function_specifier       go to state 39
    alignment_specifier      go to state 40
    parameter_declaration    go to state 451
    type_qualifier           go to state 42
    declaration_specifiers   go to state 265


state 376

  282 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 282 (direct_declarator)


state 377

  188 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 452


state 378

  245 direct_abstract_declarator: '(' . abstract_declarator ')'
  262                           | '(' . ')'
  263                           | '(' . parameter_type_list ')'
  270 direct_declarator: '(' . declarator ')'

    IDENTIFIER    shift, and go to state 78
    NAME_TYPEDEF  shift, and go to state 2
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    INLINE        shift, and go to state 8
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27
    ALIGNAS       shift, and go to state 28
    NORETURN      shift, and go to state 29
    THREAD_LOCAL  shift, and go to state 30
    '('           shift, and go to state 378
    ')'           shift, and go to state 318
    '['           shift, and go to state 210
    '*'           shift, and go to state 80

    storage_class_specifier     go to state 33
    type_specifier              go to state 34
    struct_specifier            go to state 35
    union_specifier             go to state 36
    enum_specifier              go to state 37
    atomic_type_specifier       go to state 38
    function_specifier          go to state 39
    alignment_specifier         go to state 40
    parameter_type_list         go to state 319
    parameter_list              go to state 262
    parameter_declaration       go to state 263
    type_qualifier              go to state 42
    pointer                     go to state 379
    direct_abstract_declarator  go to state 212
    abstract_declarator         go to state 320
    direct_declarator           go to state 83
    declarator                  go to state 168
    declaration_specifiers      go to state 265


state 379

  266 abstract_declarator: pointer . direct_abstract_declarator
  267                    | pointer .
  285 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 78
    '('         shift, and go to state 378
    '['         shift, and go to state 210

    $default  reduce using rule 267 (abstract_declarator)

    direct_abstract_declarator  go to state 326
    direct_declarator           go to state 173


state 380

  185 parameter_declaration: declaration_specifiers abstract_declarator .

    $default  reduce using rule 185 (parameter_declaration)


state 381

  184 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 184 (parameter_declaration)


state 382

  274 direct_declarator: direct_declarator '[' STATIC expression_assignment . ']'

    ']'  shift, and go to state 453


state 383

  240 type_qualifier_list: type_qualifier_list . type_qualifier
  273 direct_declarator: direct_declarator '[' STATIC type_qualifier_list . expression_assignment ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    ATOMIC          shift, and go to state 169
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 454
    generic_selection          go to state 165
    type_qualifier             go to state 257


state 384

  272 direct_declarator: direct_declarator '[' '*' ']' .

    $default  reduce using rule 272 (direct_declarator)


state 385

  279 direct_declarator: direct_declarator '[' expression_assignment ']' .

    $default  reduce using rule 279 (direct_declarator)


state 386

  276 direct_declarator: direct_declarator '[' type_qualifier_list STATIC . expression_assignment ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 455
    generic_selection          go to state 165


state 387

  278 direct_declarator: direct_declarator '[' type_qualifier_list ']' .

    $default  reduce using rule 278 (direct_declarator)


state 388

   66 unary_operator: '*' .
  275 direct_declarator: direct_declarator '[' type_qualifier_list '*' . ']'

    ']'  shift, and go to state 456

    $default  reduce using rule 66 (unary_operator)


state 389

  277 direct_declarator: direct_declarator '[' type_qualifier_list expression_assignment . ']'

    ']'  shift, and go to state 457


state 390

  204 labeled_statement: IDENTIFIER ':' . statement

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 458
    compound_statement         go to state 294


state 391

  209 statement_condition: IF '(' . expression ')' statement ELSE statement
  210                    | IF '(' . expression ')' statement

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 459
    generic_selection          go to state 165


state 392

  212 statement_iteration: WHILE '(' . expression ')' statement

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 460
    generic_selection          go to state 165


state 393

  213 statement_iteration: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 461


state 394

  214 statement_iteration: FOR '(' . statement_expression statement_expression ')' statement
  215                    | FOR '(' . statement_expression statement_expression expression ')' statement
  216                    | FOR '(' . declaration statement_expression ')' statement
  217                    | FOR '(' . declaration statement_expression expression ')' statement

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    NAME_TYPEDEF    shift, and go to state 2
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    TYPEDEF         shift, and go to state 3
    EXTERN          shift, and go to state 4
    STATIC          shift, and go to state 5
    AUTO            shift, and go to state 6
    REGISTER        shift, and go to state 7
    INLINE          shift, and go to state 8
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    VOID            shift, and go to state 14
    BOOL            shift, and go to state 15
    CHAR            shift, and go to state 16
    SHORT           shift, and go to state 17
    INT             shift, and go to state 18
    LONG            shift, and go to state 19
    FLOAT           shift, and go to state 20
    DOUBLE          shift, and go to state 21
    COMPLEX         shift, and go to state 22
    IMAGINARY       shift, and go to state 23
    STRUCT          shift, and go to state 24
    UNION           shift, and go to state 25
    ENUM            shift, and go to state 26
    ATOMIC          shift, and go to state 27
    ALIGNAS         shift, and go to state 28
    NORETURN        shift, and go to state 29
    THREAD_LOCAL    shift, and go to state 30
    GENERIC         shift, and go to state 138
    STATIC_ASSERT   shift, and go to state 31
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_specifier           go to state 35
    union_specifier            go to state 36
    enum_specifier             go to state 37
    generic_selection          go to state 165
    atomic_type_specifier      go to state 38
    function_specifier         go to state 39
    alignment_specifier        go to state 40
    static_assert_declaration  go to state 41
    statement_expression       go to state 462
    type_qualifier             go to state 42
    declaration_specifiers     go to state 179
    declaration                go to state 463


state 395

  221 statement_jump: RETURN ';' .

    $default  reduce using rule 221 (statement_jump)


state 396

  117 expression: expression . ',' expression_assignment
  222 statement_jump: RETURN expression . ';'

    ','  shift, and go to state 346
    ';'  shift, and go to state 464


state 397

  218 statement_jump: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 465


state 398

  219 statement_jump: CONTINUE ';' .

    $default  reduce using rule 219 (statement_jump)


state 399

  220 statement_jump: BREAK ';' .

    $default  reduce using rule 220 (statement_jump)


state 400

  211 statement_condition: SWITCH '(' . expression ')' statement

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 466
    generic_selection          go to state 165


state 401

  205 labeled_statement: CASE expression_constant . ':' statement

    ':'  shift, and go to state 467


state 402

  206 labeled_statement: DEFAULT ':' . statement

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 468
    compound_statement         go to state 294


state 403

  208 statement_expression: expression ';' .

    $default  reduce using rule 208 (statement_expression)


state 404

  234 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 234 (compound_statement)


state 405

  230 block_item_list: block_item_list block_item .

    $default  reduce using rule 230 (block_item_list)


state 406

  201 designator: '[' . expression_constant ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 163
    expression_constant        go to state 469
    generic_selection          go to state 165


state 407

  202 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 470


state 408

  193 initializer_list: initializer_list . ',' designation initializer
  194                 | initializer_list . ',' initializer
  195 initializer: '{' initializer_list . '}'
  196            | '{' initializer_list . ',' '}'

    ','  shift, and go to state 471
    '}'  shift, and go to state 472


state 409

  192 initializer_list: initializer .

    $default  reduce using rule 192 (initializer_list)


state 410

  191 initializer_list: designation . initializer

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 296
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 297
    generic_selection          go to state 165
    initializer                go to state 473


state 411

  198 designation: designator_list . '='
  200 designator_list: designator_list . designator

    '['  shift, and go to state 406
    '.'  shift, and go to state 407
    '='  shift, and go to state 474

    designator  go to state 475


state 412

  199 designator_list: designator .

    $default  reduce using rule 199 (designator_list)


state 413

   22 preprocessor_define: PP_DEFINE PP_SPACE IDENTIFIER PP_SPACE preprocessor_content .

    $default  reduce using rule 22 (preprocessor_define)


state 414

   25 preprocessor_define_args: IDENTIFIER .

    $default  reduce using rule 25 (preprocessor_define_args)


state 415

   23 preprocessor_define: PP_DEFINE PP_SPACE IDENTIFIER '(' preprocessor_define_args . ')'
   24                    | PP_DEFINE PP_SPACE IDENTIFIER '(' preprocessor_define_args . ')' preprocessor_content
   26 preprocessor_define_args: preprocessor_define_args . ',' IDENTIFIER

    ')'  shift, and go to state 476
    ','  shift, and go to state 477


state 416

   34 preprocessor_line: PP_LINE PP_SPACE constant PP_SPACE PP_STRING .

    $default  reduce using rule 34 (preprocessor_line)


state 417

   35 preprocessor_line: PP_LINE PP_SPACE constant PP_SPACE LITERAL_STRING .

    $default  reduce using rule 35 (preprocessor_line)


state 418

  154 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 154 (struct_declarator_list)


state 419

  156 struct_declarator: declarator ':' expression_constant .

    $default  reduce using rule 156 (struct_declarator)


state 420

  164 enum_specifier: ENUM IDENTIFIER '{' enumerator_list ',' '}' .

    $default  reduce using rule 164 (enum_specifier)


state 421

  263 direct_abstract_declarator: '(' parameter_type_list ')' .

    $default  reduce using rule 263 (direct_abstract_declarator)


state 422

  245 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 245 (direct_abstract_declarator)


state 423

  249 direct_abstract_declarator: '[' STATIC expression_assignment . ']'

    ']'  shift, and go to state 478


state 424

  240 type_qualifier_list: type_qualifier_list . type_qualifier
  248 direct_abstract_declarator: '[' STATIC type_qualifier_list . expression_assignment ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    ATOMIC          shift, and go to state 169
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 479
    generic_selection          go to state 165
    type_qualifier             go to state 257


state 425

  247 direct_abstract_declarator: '[' '*' ']' .

    $default  reduce using rule 247 (direct_abstract_declarator)


state 426

  253 direct_abstract_declarator: '[' expression_assignment ']' .

    $default  reduce using rule 253 (direct_abstract_declarator)


state 427

  250 direct_abstract_declarator: '[' type_qualifier_list STATIC . expression_assignment ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 480
    generic_selection          go to state 165


state 428

  252 direct_abstract_declarator: '[' type_qualifier_list ']' .

    $default  reduce using rule 252 (direct_abstract_declarator)


state 429

  251 direct_abstract_declarator: '[' type_qualifier_list expression_assignment . ']'

    ']'  shift, and go to state 481


state 430

  264 direct_abstract_declarator: direct_abstract_declarator '(' ')' .

    $default  reduce using rule 264 (direct_abstract_declarator)


state 431

  265 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 482


state 432

  256 direct_abstract_declarator: direct_abstract_declarator '[' STATIC . type_qualifier_list expression_assignment ']'
  257                           | direct_abstract_declarator '[' STATIC . expression_assignment ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    ATOMIC          shift, and go to state 169
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 483
    generic_selection          go to state 165
    type_qualifier             go to state 170
    type_qualifier_list        go to state 484


state 433

  254 direct_abstract_declarator: direct_abstract_declarator '[' ']' .

    $default  reduce using rule 254 (direct_abstract_declarator)


state 434

   66 unary_operator: '*' .
  255 direct_abstract_declarator: direct_abstract_declarator '[' '*' . ']'

    ']'  shift, and go to state 485

    $default  reduce using rule 66 (unary_operator)


state 435

  261 direct_abstract_declarator: direct_abstract_declarator '[' expression_assignment . ']'

    ']'  shift, and go to state 486


state 436

  240 type_qualifier_list: type_qualifier_list . type_qualifier
  258 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list . expression_assignment ']'
  259                           | direct_abstract_declarator '[' type_qualifier_list . STATIC expression_assignment ']'
  260                           | direct_abstract_declarator '[' type_qualifier_list . ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    STATIC          shift, and go to state 487
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    ATOMIC          shift, and go to state 169
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    ']'             shift, and go to state 488
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 489
    generic_selection          go to state 165
    type_qualifier             go to state 257


state 437

   54 expression_postfix: '(' type_name ')' . '{' initializer_list '}'
   55                   | '(' type_name ')' . '{' initializer_list ',' '}'
   63 expression_unary: SIZEOF '(' type_name ')' .

    '{'  shift, and go to state 443

    $default  reduce using rule 63 (expression_unary)


state 438

   64 expression_unary: ALIGNOF '(' type_name ')' .

    $default  reduce using rule 64 (expression_unary)


state 439

   54 expression_postfix: '(' type_name ')' . '{' initializer_list '}'
   55                   | '(' type_name ')' . '{' initializer_list ',' '}'

    '{'  shift, and go to state 443


state 440

  170 generic_selection: GENERIC '(' expression_assignment ',' . generic_assoc_list ')'

    NAME_TYPEDEF  shift, and go to state 2
    DEFAULT       shift, and go to state 490
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27

    type_specifier            go to state 114
    specifier_qualifier_list  go to state 126
    struct_specifier          go to state 35
    union_specifier           go to state 36
    enum_specifier            go to state 37
    generic_assoc_list        go to state 491
    generic_association       go to state 492
    atomic_type_specifier     go to state 38
    type_name                 go to state 493
    type_qualifier            go to state 119


state 441

  104 expression_assignment: expression_unary assignment_operator expression_assignment .

    $default  reduce using rule 104 (expression_assignment)


state 442

  117 expression: expression ',' expression_assignment .

    $default  reduce using rule 117 (expression)


state 443

   54 expression_postfix: '(' type_name ')' '{' . initializer_list '}'
   55                   | '(' type_name ')' '{' . initializer_list ',' '}'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '['             shift, and go to state 406
    '.'             shift, and go to state 407
    '{'             shift, and go to state 296
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 297
    generic_selection          go to state 165
    initializer_list           go to state 494
    initializer                go to state 409
    designation                go to state 410
    designator_list            go to state 411
    designator                 go to state 412


state 444

   72 expression_cast: '(' type_name ')' expression_cast .

    $default  reduce using rule 72 (expression_cast)


state 445

   49 expression_postfix: expression_postfix '(' argument_expression_list ')' .

    $default  reduce using rule 49 (expression_postfix)


state 446

   57 argument_expression_list: argument_expression_list ',' . expression_assignment

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 495
    generic_selection          go to state 165


state 447

   47 expression_postfix: expression_postfix '[' expression ']' .

    $default  reduce using rule 47 (expression_postfix)


state 448

  102 expression_ternary: expression_logical_or '?' expression ':' . expression_ternary

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 150
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 496
    generic_selection          go to state 165


state 449

  203 static_assert_declaration: STATIC_ASSERT '(' expression_constant ',' LITERAL_STRING ')' . ';'

    ';'  shift, and go to state 497


state 450

  180 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 180 (parameter_type_list)


state 451

  183 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 183 (parameter_list)


state 452

  188 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 188 (identifier_list)


state 453

  274 direct_declarator: direct_declarator '[' STATIC expression_assignment ']' .

    $default  reduce using rule 274 (direct_declarator)


state 454

  273 direct_declarator: direct_declarator '[' STATIC type_qualifier_list expression_assignment . ']'

    ']'  shift, and go to state 498


state 455

  276 direct_declarator: direct_declarator '[' type_qualifier_list STATIC expression_assignment . ']'

    ']'  shift, and go to state 499


state 456

  275 direct_declarator: direct_declarator '[' type_qualifier_list '*' ']' .

    $default  reduce using rule 275 (direct_declarator)


state 457

  277 direct_declarator: direct_declarator '[' type_qualifier_list expression_assignment ']' .

    $default  reduce using rule 277 (direct_declarator)


state 458

  204 labeled_statement: IDENTIFIER ':' statement .

    $default  reduce using rule 204 (labeled_statement)


state 459

  117 expression: expression . ',' expression_assignment
  209 statement_condition: IF '(' expression . ')' statement ELSE statement
  210                    | IF '(' expression . ')' statement

    ')'  shift, and go to state 500
    ','  shift, and go to state 346


state 460

  117 expression: expression . ',' expression_assignment
  212 statement_iteration: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 501
    ','  shift, and go to state 346


state 461

  213 statement_iteration: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 502


state 462

  214 statement_iteration: FOR '(' statement_expression . statement_expression ')' statement
  215                    | FOR '(' statement_expression . statement_expression expression ')' statement

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    statement_expression       go to state 503


state 463

  216 statement_iteration: FOR '(' declaration . statement_expression ')' statement
  217                    | FOR '(' declaration . statement_expression expression ')' statement

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    statement_expression       go to state 504


state 464

  222 statement_jump: RETURN expression ';' .

    $default  reduce using rule 222 (statement_jump)


state 465

  218 statement_jump: GOTO IDENTIFIER ';' .

    $default  reduce using rule 218 (statement_jump)


state 466

  117 expression: expression . ',' expression_assignment
  211 statement_condition: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 505
    ','  shift, and go to state 346


state 467

  205 labeled_statement: CASE expression_constant ':' . statement

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 506
    compound_statement         go to state 294


state 468

  206 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 206 (labeled_statement)


state 469

  201 designator: '[' expression_constant . ']'

    ']'  shift, and go to state 507


state 470

  202 designator: '.' IDENTIFIER .

    $default  reduce using rule 202 (designator)


state 471

  193 initializer_list: initializer_list ',' . designation initializer
  194                 | initializer_list ',' . initializer
  196 initializer: '{' initializer_list ',' . '}'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '['             shift, and go to state 406
    '.'             shift, and go to state 407
    '{'             shift, and go to state 296
    '}'             shift, and go to state 508
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 297
    generic_selection          go to state 165
    initializer                go to state 509
    designation                go to state 510
    designator_list            go to state 411
    designator                 go to state 412


state 472

  195 initializer: '{' initializer_list '}' .

    $default  reduce using rule 195 (initializer)


state 473

  191 initializer_list: designation initializer .

    $default  reduce using rule 191 (initializer_list)


state 474

  198 designation: designator_list '=' .

    $default  reduce using rule 198 (designation)


state 475

  200 designator_list: designator_list designator .

    $default  reduce using rule 200 (designator_list)


state 476

   23 preprocessor_define: PP_DEFINE PP_SPACE IDENTIFIER '(' preprocessor_define_args ')' .
   24                    | PP_DEFINE PP_SPACE IDENTIFIER '(' preprocessor_define_args ')' . preprocessor_content

    PP_CONTENT      shift, and go to state 89
    PP_STRING       shift, and go to state 90
    LITERAL_INT     shift, and go to state 91
    LITERAL_FLOAT   shift, and go to state 92
    LITERAL_CHAR    shift, and go to state 93
    LITERAL_STRING  shift, and go to state 94
    LITERAL_ENUM    shift, and go to state 95

    $default  reduce using rule 23 (preprocessor_define)

    preprocessor_content  go to state 511


state 477

   26 preprocessor_define_args: preprocessor_define_args ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 512


state 478

  249 direct_abstract_declarator: '[' STATIC expression_assignment ']' .

    $default  reduce using rule 249 (direct_abstract_declarator)


state 479

  248 direct_abstract_declarator: '[' STATIC type_qualifier_list expression_assignment . ']'

    ']'  shift, and go to state 513


state 480

  250 direct_abstract_declarator: '[' type_qualifier_list STATIC expression_assignment . ']'

    ']'  shift, and go to state 514


state 481

  251 direct_abstract_declarator: '[' type_qualifier_list expression_assignment ']' .

    $default  reduce using rule 251 (direct_abstract_declarator)


state 482

  265 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 265 (direct_abstract_declarator)


state 483

  257 direct_abstract_declarator: direct_abstract_declarator '[' STATIC expression_assignment . ']'

    ']'  shift, and go to state 515


state 484

  240 type_qualifier_list: type_qualifier_list . type_qualifier
  256 direct_abstract_declarator: direct_abstract_declarator '[' STATIC type_qualifier_list . expression_assignment ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    CONST           shift, and go to state 9
    RESTRICT        shift, and go to state 10
    VOLATILE        shift, and go to state 11
    ATOMIC          shift, and go to state 169
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 516
    generic_selection          go to state 165
    type_qualifier             go to state 257


state 485

  255 direct_abstract_declarator: direct_abstract_declarator '[' '*' ']' .

    $default  reduce using rule 255 (direct_abstract_declarator)


state 486

  261 direct_abstract_declarator: direct_abstract_declarator '[' expression_assignment ']' .

    $default  reduce using rule 261 (direct_abstract_declarator)


state 487

  259 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list STATIC . expression_assignment ']'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 517
    generic_selection          go to state 165


state 488

  260 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list ']' .

    $default  reduce using rule 260 (direct_abstract_declarator)


state 489

  258 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list expression_assignment . ']'

    ']'  shift, and go to state 518


state 490

  174 generic_association: DEFAULT . ':' expression_assignment

    ':'  shift, and go to state 519


state 491

  170 generic_selection: GENERIC '(' expression_assignment ',' generic_assoc_list . ')'
  172 generic_assoc_list: generic_assoc_list . ',' generic_association

    ')'  shift, and go to state 520
    ','  shift, and go to state 521


state 492

  171 generic_assoc_list: generic_association .

    $default  reduce using rule 171 (generic_assoc_list)


state 493

  173 generic_association: type_name . ':' expression_assignment

    ':'  shift, and go to state 522


state 494

   54 expression_postfix: '(' type_name ')' '{' initializer_list . '}'
   55                   | '(' type_name ')' '{' initializer_list . ',' '}'
  193 initializer_list: initializer_list . ',' designation initializer
  194                 | initializer_list . ',' initializer

    ','  shift, and go to state 523
    '}'  shift, and go to state 524


state 495

   57 argument_expression_list: argument_expression_list ',' expression_assignment .

    $default  reduce using rule 57 (argument_expression_list)


state 496

  102 expression_ternary: expression_logical_or '?' expression ':' expression_ternary .

    $default  reduce using rule 102 (expression_ternary)


state 497

  203 static_assert_declaration: STATIC_ASSERT '(' expression_constant ',' LITERAL_STRING ')' ';' .

    $default  reduce using rule 203 (static_assert_declaration)


state 498

  273 direct_declarator: direct_declarator '[' STATIC type_qualifier_list expression_assignment ']' .

    $default  reduce using rule 273 (direct_declarator)


state 499

  276 direct_declarator: direct_declarator '[' type_qualifier_list STATIC expression_assignment ']' .

    $default  reduce using rule 276 (direct_declarator)


state 500

  209 statement_condition: IF '(' expression ')' . statement ELSE statement
  210                    | IF '(' expression ')' . statement

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 525
    compound_statement         go to state 294


state 501

  212 statement_iteration: WHILE '(' expression ')' . statement

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 526
    compound_statement         go to state 294


state 502

  213 statement_iteration: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 527
    generic_selection          go to state 165


state 503

  214 statement_iteration: FOR '(' statement_expression statement_expression . ')' statement
  215                    | FOR '(' statement_expression statement_expression . expression ')' statement

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    ')'             shift, and go to state 528
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 529
    generic_selection          go to state 165


state 504

  216 statement_iteration: FOR '(' declaration statement_expression . ')' statement
  217                    | FOR '(' declaration statement_expression . expression ')' statement

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    ')'             shift, and go to state 530
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 531
    generic_selection          go to state 165


state 505

  211 statement_condition: SWITCH '(' expression ')' . statement

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 532
    compound_statement         go to state 294


state 506

  205 labeled_statement: CASE expression_constant ':' statement .

    $default  reduce using rule 205 (labeled_statement)


state 507

  201 designator: '[' expression_constant ']' .

    $default  reduce using rule 201 (designator)


state 508

  196 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 196 (initializer)


state 509

  194 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 194 (initializer_list)


state 510

  193 initializer_list: initializer_list ',' designation . initializer

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 296
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 297
    generic_selection          go to state 165
    initializer                go to state 533


state 511

   24 preprocessor_define: PP_DEFINE PP_SPACE IDENTIFIER '(' preprocessor_define_args ')' preprocessor_content .

    $default  reduce using rule 24 (preprocessor_define)


state 512

   26 preprocessor_define_args: preprocessor_define_args ',' IDENTIFIER .

    $default  reduce using rule 26 (preprocessor_define_args)


state 513

  248 direct_abstract_declarator: '[' STATIC type_qualifier_list expression_assignment ']' .

    $default  reduce using rule 248 (direct_abstract_declarator)


state 514

  250 direct_abstract_declarator: '[' type_qualifier_list STATIC expression_assignment ']' .

    $default  reduce using rule 250 (direct_abstract_declarator)


state 515

  257 direct_abstract_declarator: direct_abstract_declarator '[' STATIC expression_assignment ']' .

    $default  reduce using rule 257 (direct_abstract_declarator)


state 516

  256 direct_abstract_declarator: direct_abstract_declarator '[' STATIC type_qualifier_list expression_assignment . ']'

    ']'  shift, and go to state 534


state 517

  259 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list STATIC expression_assignment . ']'

    ']'  shift, and go to state 535


state 518

  258 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list expression_assignment ']' .

    $default  reduce using rule 258 (direct_abstract_declarator)


state 519

  174 generic_association: DEFAULT ':' . expression_assignment

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 536
    generic_selection          go to state 165


state 520

  170 generic_selection: GENERIC '(' expression_assignment ',' generic_assoc_list ')' .

    $default  reduce using rule 170 (generic_selection)


state 521

  172 generic_assoc_list: generic_assoc_list ',' . generic_association

    NAME_TYPEDEF  shift, and go to state 2
    DEFAULT       shift, and go to state 490
    CONST         shift, and go to state 9
    RESTRICT      shift, and go to state 10
    VOLATILE      shift, and go to state 11
    SIGNED        shift, and go to state 12
    UNSIGNED      shift, and go to state 13
    VOID          shift, and go to state 14
    BOOL          shift, and go to state 15
    CHAR          shift, and go to state 16
    SHORT         shift, and go to state 17
    INT           shift, and go to state 18
    LONG          shift, and go to state 19
    FLOAT         shift, and go to state 20
    DOUBLE        shift, and go to state 21
    COMPLEX       shift, and go to state 22
    IMAGINARY     shift, and go to state 23
    STRUCT        shift, and go to state 24
    UNION         shift, and go to state 25
    ENUM          shift, and go to state 26
    ATOMIC        shift, and go to state 27

    type_specifier            go to state 114
    specifier_qualifier_list  go to state 126
    struct_specifier          go to state 35
    union_specifier           go to state 36
    enum_specifier            go to state 37
    generic_association       go to state 537
    atomic_type_specifier     go to state 38
    type_name                 go to state 493
    type_qualifier            go to state 119


state 522

  173 generic_association: type_name ':' . expression_assignment

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 538
    generic_selection          go to state 165


state 523

   55 expression_postfix: '(' type_name ')' '{' initializer_list ',' . '}'
  193 initializer_list: initializer_list ',' . designation initializer
  194                 | initializer_list ',' . initializer

    IDENTIFIER      shift, and go to state 128
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '['             shift, and go to state 406
    '.'             shift, and go to state 407
    '{'             shift, and go to state 296
    '}'             shift, and go to state 539
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 297
    generic_selection          go to state 165
    initializer                go to state 509
    designation                go to state 510
    designator_list            go to state 411
    designator                 go to state 412


state 524

   54 expression_postfix: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 54 (expression_postfix)


state 525

  209 statement_condition: IF '(' expression ')' statement . ELSE statement
  210                    | IF '(' expression ')' statement .

    ELSE  shift, and go to state 540

    ELSE      [reduce using rule 210 (statement_condition)]
    $default  reduce using rule 210 (statement_condition)


state 526

  212 statement_iteration: WHILE '(' expression ')' statement .

    $default  reduce using rule 212 (statement_iteration)


state 527

  117 expression: expression . ',' expression_assignment
  213 statement_iteration: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 541
    ','  shift, and go to state 346


state 528

  214 statement_iteration: FOR '(' statement_expression statement_expression ')' . statement

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 542
    compound_statement         go to state 294


state 529

  117 expression: expression . ',' expression_assignment
  215 statement_iteration: FOR '(' statement_expression statement_expression expression . ')' statement

    ')'  shift, and go to state 543
    ','  shift, and go to state 346


state 530

  216 statement_iteration: FOR '(' declaration statement_expression ')' . statement

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 544
    compound_statement         go to state 294


state 531

  117 expression: expression . ',' expression_assignment
  217 statement_iteration: FOR '(' declaration statement_expression expression . ')' statement

    ')'  shift, and go to state 545
    ','  shift, and go to state 346


state 532

  211 statement_condition: SWITCH '(' expression ')' statement .

    $default  reduce using rule 211 (statement_condition)


state 533

  193 initializer_list: initializer_list ',' designation initializer .

    $default  reduce using rule 193 (initializer_list)


state 534

  256 direct_abstract_declarator: direct_abstract_declarator '[' STATIC type_qualifier_list expression_assignment ']' .

    $default  reduce using rule 256 (direct_abstract_declarator)


state 535

  259 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list STATIC expression_assignment ']' .

    $default  reduce using rule 259 (direct_abstract_declarator)


state 536

  174 generic_association: DEFAULT ':' expression_assignment .

    $default  reduce using rule 174 (generic_association)


state 537

  172 generic_assoc_list: generic_assoc_list ',' generic_association .

    $default  reduce using rule 172 (generic_assoc_list)


state 538

  173 generic_association: type_name ':' expression_assignment .

    $default  reduce using rule 173 (generic_association)


state 539

   55 expression_postfix: '(' type_name ')' '{' initializer_list ',' '}' .

    $default  reduce using rule 55 (expression_postfix)


state 540

  209 statement_condition: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 546
    compound_statement         go to state 294


state 541

  213 statement_iteration: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 547


state 542

  214 statement_iteration: FOR '(' statement_expression statement_expression ')' statement .

    $default  reduce using rule 214 (statement_iteration)


state 543

  215 statement_iteration: FOR '(' statement_expression statement_expression expression ')' . statement

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 548
    compound_statement         go to state 294


state 544

  216 statement_iteration: FOR '(' declaration statement_expression ')' statement .

    $default  reduce using rule 216 (statement_iteration)


state 545

  217 statement_iteration: FOR '(' declaration statement_expression expression ')' . statement

    IDENTIFIER      shift, and go to state 271
    LITERAL_INT     shift, and go to state 129
    LITERAL_FLOAT   shift, and go to state 130
    LITERAL_CHAR    shift, and go to state 131
    LITERAL_STRING  shift, and go to state 132
    LITERAL_ENUM    shift, and go to state 133
    IF              shift, and go to state 272
    WHILE           shift, and go to state 273
    DO              shift, and go to state 274
    FOR             shift, and go to state 275
    RETURN          shift, and go to state 276
    GOTO            shift, and go to state 277
    CONTINUE        shift, and go to state 278
    BREAK           shift, and go to state 279
    SWITCH          shift, and go to state 280
    CASE            shift, and go to state 281
    DEFAULT         shift, and go to state 282
    SIZEOF          shift, and go to state 134
    ALIGNOF         shift, and go to state 135
    OP_INC          shift, and go to state 136
    OP_DEC          shift, and go to state 137
    GENERIC         shift, and go to state 138
    '('             shift, and go to state 139
    '{'             shift, and go to state 176
    '&'             shift, and go to state 140
    '*'             shift, and go to state 141
    '+'             shift, and go to state 142
    '-'             shift, and go to state 143
    '~'             shift, and go to state 144
    '!'             shift, and go to state 145
    ';'             shift, and go to state 284

    constant                   go to state 146
    string                     go to state 147
    expression_primary         go to state 148
    expression_postfix         go to state 149
    expression_unary           go to state 222
    unary_operator             go to state 151
    expression_cast            go to state 152
    expression_multiplicative  go to state 153
    expression_additive        go to state 154
    expression_shift           go to state 155
    expression_relational      go to state 156
    expression_equality        go to state 157
    expression_bitwise_and     go to state 158
    expression_bitwise_xor     go to state 159
    expression_bitwise_or      go to state 160
    expression_logical_and     go to state 161
    expression_logical_or      go to state 162
    expression_ternary         go to state 223
    expression_assignment      go to state 224
    expression                 go to state 285
    generic_selection          go to state 165
    labeled_statement          go to state 286
    statement_expression       go to state 287
    statement_condition        go to state 288
    statement_iteration        go to state 289
    statement_jump             go to state 290
    statement                  go to state 549
    compound_statement         go to state 294


state 546

  209 statement_condition: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 209 (statement_condition)


state 547

  213 statement_iteration: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 213 (statement_iteration)


state 548

  215 statement_iteration: FOR '(' statement_expression statement_expression expression ')' statement .

    $default  reduce using rule 215 (statement_iteration)


state 549

  217 statement_iteration: FOR '(' declaration statement_expression expression ')' statement .

    $default  reduce using rule 217 (statement_iteration)
